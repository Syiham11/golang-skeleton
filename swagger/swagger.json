{
  "swagger": "2.0",
  "info": {
    "contact": {}
  },
  "paths": {
    "/api/v1/ads": {
      "get": {
        "description": "Get list of ads",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/plain"
        ],
        "tags": [
          "ads"
        ],
        "summary": "Get list of ads",
        "operationId": "ads-ads-list",
        "parameters": [
          {
            "enum": [
              "idle",
              "active",
              "non-active"
            ],
            "type": "string",
            "default": "idle",
            "description": "filter ads by mobile status",
            "name": "mobile_active",
            "in": "query"
          },
          {
            "enum": [
              "idle",
              "active",
              "non-active"
            ],
            "type": "string",
            "default": "idle",
            "description": "filter ads by desktop status",
            "name": "desktop_active",
            "in": "query"
          },
          {
            "enum": [
              "internal",
              "external"
            ],
            "type": "string",
            "default": "internal",
            "description": "filter by source",
            "name": "source",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.Ads"
            }
          }
        }
      }
    },
    "/api/v1/auth/apple-login": {
      "post": {
        "description": "Apple login account",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/plain"
        ],
        "tags": [
          "auth"
        ],
        "summary": "Apple login account",
        "operationId": "auth-apple-login",
        "parameters": [
          {
            "type": "string",
            "description": "The token you got from apple login response",
            "name": "access_token",
            "in": "formData",
            "required": true
          },
          {
            "type": "string",
            "description": "Player ID",
            "name": "player_id",
            "in": "formData"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/api/v1/auth/delete-image": {
      "delete": {
        "description": "Delete image",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/plain"
        ],
        "tags": [
          "auth"
        ],
        "summary": "Delete image",
        "operationId": "auth-delete-image",
        "parameters": [
          {
            "type": "string",
            "description": "image filename",
            "name": "filename",
            "in": "formData",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/helper.HttpResponse"
            }
          }
        }
      }
    },
    "/api/v1/auth/facebook-login": {
      "post": {
        "description": "Facebook login account",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/plain"
        ],
        "tags": [
          "auth"
        ],
        "summary": "Facebook login account",
        "operationId": "auth-facebook-login",
        "parameters": [
          {
            "type": "string",
            "description": "Facebook access token",
            "name": "access_token",
            "in": "formData",
            "required": true
          },
          {
            "type": "string",
            "description": "Player ID",
            "name": "player_id",
            "in": "formData"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/api/v1/auth/facebook-login-x": {
      "post": {
        "description": "Facebook login account",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "auth"
        ],
        "summary": "Facebook login account",
        "operationId": "auth-facebook-login-x",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/api/v1/auth/forgot-password": {
      "post": {
        "description": "Forgot password",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "auth"
        ],
        "summary": "Forgot password",
        "operationId": "auth-forgot-password",
        "parameters": [
          {
            "description": "JSON Request Body",
            "name": "RequestBody",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/controllers.ForgotPasswordRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/api/v1/auth/google-login": {
      "post": {
        "description": "Google login account",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/plain"
        ],
        "tags": [
          "auth"
        ],
        "summary": "Google login account",
        "operationId": "auth-google-login",
        "parameters": [
          {
            "type": "string",
            "description": "Google access token",
            "name": "access_token",
            "in": "formData",
            "required": true
          },
          {
            "type": "string",
            "description": "Player ID",
            "name": "player_id",
            "in": "formData"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/api/v1/auth/google-login-x": {
      "post": {
        "description": "Google login account",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "auth"
        ],
        "summary": "Google login account",
        "operationId": "auth-google-login-x",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/api/v1/auth/login": {
      "post": {
        "description": "Login account",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "auth"
        ],
        "summary": "Login account",
        "operationId": "auth-login",
        "parameters": [
          {
            "description": "JSON Request Body",
            "name": "RequestBody",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/controllers.LoginRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/api/v1/auth/register-partner": {
      "post": {
        "description": "Register new partner account",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "auth"
        ],
        "summary": "Register new partner account",
        "operationId": "auth-register-partner",
        "parameters": [
          {
            "description": "JSON Request Body",
            "name": "RequestBody",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/controllers.RegisterPartnerRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.User"
            }
          }
        }
      }
    },
    "/api/v1/auth/register-user": {
      "post": {
        "description": "Register new user account",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "auth"
        ],
        "summary": "Register new user account",
        "operationId": "auth-register-user",
        "parameters": [
          {
            "description": "JSON Request Body",
            "name": "RequestBody",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/controllers.RegisterUserRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.User"
            }
          }
        }
      }
    },
    "/api/v1/auth/request-otp": {
      "post": {
        "description": "Request OTP",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "auth"
        ],
        "summary": "Request OTP",
        "operationId": "auth-request-otp",
        "parameters": [
          {
            "description": "JSON Request Body",
            "name": "RequestBody",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/controllers.RequestOTPNoAuthRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/api/v1/auth/upload-image": {
      "post": {
        "description": "Upload image",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/plain"
        ],
        "tags": [
          "auth"
        ],
        "summary": "Upload image",
        "operationId": "auth-upload-image",
        "parameters": [
          {
            "type": "file",
            "description": "image file",
            "name": "image",
            "in": "formData",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/api/v1/auth/verify-otp": {
      "post": {
        "description": "Verify OTP",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "auth"
        ],
        "summary": "Verify OTP",
        "operationId": "auth-verify-otp",
        "parameters": [
          {
            "description": "JSON Request Body",
            "name": "RequestBody",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/controllers.VerifyOTPRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.User"
            }
          }
        }
      }
    },
    "/api/v1/banners": {
      "get": {
        "description": "Get list of banners",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/plain"
        ],
        "tags": [
          "banners"
        ],
        "summary": "Get list of banners",
        "operationId": "banners-banner-list",
        "parameters": [
          {
            "type": "integer",
            "default": 1,
            "description": "page number",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 10,
            "description": "number of banners in single page",
            "name": "pageSize",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/models.Banner"
              }
            }
          }
        }
      }
    },
    "/api/v1/bookings/cancel/{booking_id}": {
      "patch": {
        "description": "Cancel booking",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/plain"
        ],
        "tags": [
          "bookings"
        ],
        "summary": "Cancel booking",
        "operationId": "bookings-cancel-booking",
        "parameters": [
          {
            "type": "string",
            "description": "Auth Token",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "integer",
            "description": "Booking ID",
            "name": "booking_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.Booking"
            }
          }
        }
      }
    },
    "/api/v1/bookings/influencer": {
      "post": {
        "description": "Create influencer booking",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "bookings"
        ],
        "summary": "Create influencer booking",
        "operationId": "bookings-influencer-booking",
        "parameters": [
          {
            "type": "string",
            "description": "Auth Token",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "description": "JSON Request Body",
            "name": "RequestBody",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/controllers.InfluencerBookingRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.Booking"
            }
          }
        }
      }
    },
    "/api/v1/bookings/info/{order_id}": {
      "get": {
        "description": "Get detail booking order id",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "bookings"
        ],
        "summary": "Get detail booking order id",
        "operationId": "bookings-get-booking-detail-by-order-id",
        "parameters": [
          {
            "type": "string",
            "description": "Auth Token",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "integer",
            "description": "Booking ID",
            "name": "order_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.BookingDetail"
            }
          }
        }
      }
    },
    "/api/v1/bookings/my-orders": {
      "get": {
        "description": "Get my orders",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "bookings"
        ],
        "summary": "Get my orders",
        "operationId": "bookings-get-my-orders",
        "parameters": [
          {
            "type": "string",
            "description": "Auth Token",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "integer",
            "default": 1,
            "description": "page number",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 10,
            "description": "number of partners in single page",
            "name": "pageSize",
            "in": "query"
          },
          {
            "type": "string",
            "description": "filter by approval status (0 = menunggu partner, 1 = diterima, 2 = selesai, 3 = diselesaikan oleh partner, -1 = ditolak)",
            "name": "approval_status",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.Booking"
            }
          }
        }
      }
    },
    "/api/v1/bookings/my-purchase-histories": {
      "get": {
        "description": "Get my purchase histories",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "bookings"
        ],
        "summary": "Get my purchase histories",
        "operationId": "bookings-get-purchase-histories",
        "parameters": [
          {
            "type": "string",
            "description": "Auth Token",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "integer",
            "default": 1,
            "description": "page number",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 10,
            "description": "number of partners in single page",
            "name": "pageSize",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.Booking"
            }
          }
        }
      }
    },
    "/api/v1/bookings/talent": {
      "post": {
        "description": "Create talent booking",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "bookings"
        ],
        "summary": "Create talent booking",
        "operationId": "bookings-talent-booking",
        "parameters": [
          {
            "type": "string",
            "description": "Auth Token",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "description": "JSON Request Body",
            "name": "RequestBody",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/controllers.TalentBookingRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.Booking"
            }
          }
        }
      }
    },
    "/api/v1/bookings/vendor": {
      "post": {
        "description": "Create vendor booking",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "bookings"
        ],
        "summary": "Create vendor booking",
        "operationId": "bookings-vendor-booking",
        "parameters": [
          {
            "type": "string",
            "description": "Auth Token",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "description": "JSON Request Body",
            "name": "RequestBody",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/controllers.VendorBookingRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.Booking"
            }
          }
        }
      }
    },
    "/api/v1/bookings/venue": {
      "post": {
        "description": "Create venue booking",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "bookings"
        ],
        "summary": "Create venue booking",
        "operationId": "bookings-venue-booking",
        "parameters": [
          {
            "type": "string",
            "description": "Auth Token",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "description": "JSON Request Body",
            "name": "RequestBody",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/controllers.VenueBookingRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.Booking"
            }
          }
        }
      }
    },
    "/api/v1/bookings/{id}": {
      "get": {
        "description": "Get detail booking",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "bookings"
        ],
        "summary": "Get detail booking",
        "operationId": "bookings-get-booking-detail",
        "parameters": [
          {
            "type": "string",
            "description": "Auth Token",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "integer",
            "description": "Booking ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.Booking"
            }
          }
        }
      }
    },
    "/api/v1/bookings/{id}/edit": {
      "patch": {
        "description": "Edit buyer detail",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/plain"
        ],
        "tags": [
          "bookings"
        ],
        "summary": "Edit buyer detail",
        "operationId": "bookings-edit-buyer-detail",
        "parameters": [
          {
            "type": "string",
            "description": "Auth Token",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "integer",
            "description": "ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "JSON Request Body",
            "name": "RequestBody",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/controllers.EditBookingRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.Magazine"
            }
          }
        }
      }
    },
    "/api/v1/bookmarked-partner": {
      "get": {
        "description": "Get Bookmarked Partner List",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Bookmark Partner"
        ],
        "summary": "Get Bookmarked Partner List",
        "operationId": "BookmarkedPartnerList",
        "parameters": [
          {
            "type": "string",
            "description": "Auth Token",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "integer",
            "default": 1,
            "description": "page number",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 10,
            "description": "number of banners in single page",
            "name": "pageSize",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/models.BookmarkPartnerResponse"
              }
            }
          }
        }
      }
    },
    "/api/v1/bookmarked-partner/create": {
      "post": {
        "description": "Bookmark Partner",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Bookmark Partner"
        ],
        "summary": "Bookmark Partner",
        "operationId": "BookmarkedPartnerCreate",
        "parameters": [
          {
            "type": "string",
            "description": "Auth Token",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "description": "Request payload",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/controllers.BookmarkedPartnerInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.BookmarkPartnerResponse"
            }
          }
        }
      }
    },
    "/api/v1/bookmarked-partner/delete/{id}": {
      "delete": {
        "description": "Delete Bookmarked Partner List",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Bookmark Partner"
        ],
        "summary": "Delete Bookmarked Partner List",
        "operationId": "BookmarkedPartnerDelete",
        "parameters": [
          {
            "type": "string",
            "description": "Auth Token",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "integer",
            "description": "ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.BookmarkPartnerResponse"
            }
          }
        }
      }
    },
    "/api/v1/eventmagz/comments/create/{type}/{id}": {
      "post": {
        "description": "Create eventmagz comment",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "eventmagz-comments"
        ],
        "summary": "Create eventmagz comment",
        "operationId": "eventmagz-comments-create-eventmagz-comments",
        "parameters": [
          {
            "type": "string",
            "description": "Auth Token",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "enum": [
              "program",
              "news",
              "magazine"
            ],
            "type": "string",
            "description": "Eventmagz Type",
            "name": "type",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "description": "Eventmagz ID (program_id, news_id, or magazine_id)",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "JSON Request Body",
            "name": "RequestBody",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/controllers.CreateCommentRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.EventmagzComment"
            }
          }
        }
      }
    },
    "/api/v1/eventmagz/comments/delete/{type}/{comment_id}": {
      "delete": {
        "description": "Delete eventmagz comment",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "eventmagz-comments"
        ],
        "summary": "Delete eventmagz comment",
        "operationId": "eventmagz-comments-delete-eventmagz-comments",
        "parameters": [
          {
            "type": "string",
            "description": "Auth Token",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "integer",
            "description": "Comment ID",
            "name": "comment_id",
            "in": "path",
            "required": true
          },
          {
            "enum": [
              "program",
              "news",
              "magazine"
            ],
            "type": "string",
            "description": "Eventmagz Type",
            "name": "type",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.EventmagzComment"
            }
          }
        }
      }
    },
    "/api/v1/eventmagz/comments/report": {
      "post": {
        "description": "Create magazine report",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "eventmagz-comments"
        ],
        "summary": "Create magazine report",
        "operationId": "magazines-create-magazine-report",
        "parameters": [
          {
            "type": "string",
            "description": "Auth Token",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "description": "JSON Request Body",
            "name": "RequestBody",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/controllers.CreateMagazineReportRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.MagazineReport"
            }
          }
        }
      }
    },
    "/api/v1/eventmagz/comments/report/categories": {
      "get": {
        "description": "Get magazines report categories",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/plain"
        ],
        "tags": [
          "eventmagz-comments"
        ],
        "summary": "Get magazines report categories",
        "operationId": "magazines-get-magazine-report-categories",
        "parameters": [
          {
            "type": "string",
            "description": "Auth Token",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "integer",
            "default": 1,
            "description": "page number",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 10,
            "description": "number of feeds in single page",
            "name": "pageSize",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/models.MagazineReportCategory"
              }
            }
          }
        }
      }
    },
    "/api/v1/eventmagz/comments/update/{type}/{comment_id}": {
      "patch": {
        "description": "Update eventmagz comment",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "eventmagz-comments"
        ],
        "summary": "Update eventmagz comment",
        "operationId": "eventmagz-comments-update-eventmagz-comments",
        "parameters": [
          {
            "type": "string",
            "description": "Auth Token",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "integer",
            "description": "Comment ID",
            "name": "comment_id",
            "in": "path",
            "required": true
          },
          {
            "enum": [
              "program",
              "news",
              "magazine"
            ],
            "type": "string",
            "description": "Eventmagz Type",
            "name": "type",
            "in": "path",
            "required": true
          },
          {
            "description": "JSON Request Body",
            "name": "RequestBody",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/controllers.CreateCommentRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.EventmagzComment"
            }
          }
        }
      }
    },
    "/api/v1/eventmagz/comments/{type}/{id}": {
      "get": {
        "description": "Get eventmagz comments",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "eventmagz-comments"
        ],
        "summary": "Get eventmagz comments",
        "operationId": "eventmagz-comments-get-eventmagz-comments",
        "parameters": [
          {
            "type": "integer",
            "default": 1,
            "description": "page number",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 10,
            "description": "number of feeds in single page",
            "name": "pageSize",
            "in": "query"
          },
          {
            "enum": [
              "program",
              "news",
              "magazine"
            ],
            "type": "string",
            "description": "Eventmagz Type",
            "name": "type",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "description": "Eventmagz ID (program_id, news_id, or magazine_id)",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/models.EventmagzComment"
              }
            }
          }
        }
      }
    },
    "/api/v1/feeds": {
      "get": {
        "description": "Get feeds",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "feeds"
        ],
        "summary": "Get feeds",
        "operationId": "feeds-get-feeds",
        "parameters": [
          {
            "type": "string",
            "description": "Auth Token",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "integer",
            "description": "feed category id",
            "name": "feed_category_id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Search q",
            "name": "q",
            "in": "query"
          },
          {
            "enum": [
              "all",
              "username",
              "caption",
              "hastag"
            ],
            "type": "string",
            "default": "all",
            "description": "search type",
            "name": "searchType",
            "in": "query",
            "required": true
          },
          {
            "enum": [
              "ASC",
              "DESC"
            ],
            "type": "string",
            "description": "Order Direction",
            "name": "order",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 1,
            "description": "page number",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 10,
            "description": "number of feed categories in single page",
            "name": "pageSize",
            "in": "query"
          },
          {
            "enum": [
              "all",
              "photo",
              "video"
            ],
            "type": "string",
            "default": "all",
            "description": "feed type",
            "name": "feed_type",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/models.Feed"
              }
            }
          }
        }
      }
    },
    "/api/v1/feeds/categories": {
      "get": {
        "description": "Get feed categories",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/plain"
        ],
        "tags": [
          "feeds"
        ],
        "summary": "Get feed categories",
        "operationId": "feeds-get-feed-categories",
        "parameters": [
          {
            "type": "integer",
            "default": 1,
            "description": "page number",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 10,
            "description": "number of feed categories in single page",
            "name": "pageSize",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/models.FeedCategory"
              }
            }
          }
        }
      }
    },
    "/api/v1/feeds/comment/{comment_id}": {
      "delete": {
        "description": "Delete feed comment",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "feeds"
        ],
        "summary": "Delete feed comment",
        "operationId": "feeds-delete-feed-comment",
        "parameters": [
          {
            "type": "string",
            "description": "Auth Token",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "integer",
            "description": "Comment ID",
            "name": "comment_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.FeedComment"
            }
          }
        }
      },
      "patch": {
        "description": "Update feed comment",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "feeds"
        ],
        "summary": "Update feed comment",
        "operationId": "feeds-update-feed-comment",
        "parameters": [
          {
            "type": "string",
            "description": "Auth Token",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "integer",
            "description": "Comment ID",
            "name": "comment_id",
            "in": "path",
            "required": true
          },
          {
            "description": "JSON Request Body",
            "name": "RequestBody",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/controllers.CreateFeedCommentRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.FeedComment"
            }
          }
        }
      }
    },
    "/api/v1/feeds/comment/{feed_id}": {
      "get": {
        "description": "Get feed comment",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "feeds"
        ],
        "summary": "Get feed comment",
        "operationId": "feeds-get-feed-comment",
        "parameters": [
          {
            "type": "integer",
            "description": "Feed ID",
            "name": "feed_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "default": 1,
            "description": "page number",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 10,
            "description": "number of feed categories in single page",
            "name": "pageSize",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/models.FeedComment"
              }
            }
          }
        }
      },
      "post": {
        "description": "Create feed comment",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "feeds"
        ],
        "summary": "Create feed comment",
        "operationId": "feeds-create-feed-comment",
        "parameters": [
          {
            "type": "string",
            "description": "Auth Token",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "integer",
            "description": "Feed ID",
            "name": "feed_id",
            "in": "path",
            "required": true
          },
          {
            "description": "JSON Request Body",
            "name": "RequestBody",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/controllers.CreateFeedCommentRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.FeedComment"
            }
          }
        }
      }
    },
    "/api/v1/feeds/create": {
      "post": {
        "description": "Create feed",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "feeds"
        ],
        "summary": "Create feed",
        "operationId": "feeds-create-feed",
        "parameters": [
          {
            "type": "string",
            "description": "Auth Token",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "description": "JSON Request Body",
            "name": "RequestBody",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/controllers.CreateFeedRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.Feed"
            }
          }
        }
      }
    },
    "/api/v1/feeds/like/{feed_id}": {
      "post": {
        "description": "Like feed",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "feeds"
        ],
        "summary": "Like feed",
        "operationId": "feeds-like-feed",
        "parameters": [
          {
            "type": "string",
            "description": "Auth Token",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "integer",
            "description": "Feed ID",
            "name": "feed_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.FeedLike"
            }
          }
        }
      }
    },
    "/api/v1/feeds/my-feeds": {
      "get": {
        "description": "Get my feeds",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "feeds"
        ],
        "summary": "Get my feeds",
        "operationId": "feeds-get-my-feeds",
        "parameters": [
          {
            "type": "string",
            "description": "Auth Token",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "integer",
            "default": 1,
            "description": "page number",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 10,
            "description": "number of feeds in single page",
            "name": "pageSize",
            "in": "query"
          },
          {
            "enum": [
              "all",
              "photo",
              "video"
            ],
            "type": "string",
            "default": "all",
            "description": "feed type",
            "name": "feed_type",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/models.Feed"
              }
            }
          }
        }
      }
    },
    "/api/v1/feeds/report/categories": {
      "get": {
        "description": "Get feed report categories",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/plain"
        ],
        "tags": [
          "feeds"
        ],
        "summary": "Get feed report categories",
        "operationId": "feeds-get-feed-report-categories",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/models.FeedReportCategory"
              }
            }
          }
        }
      }
    },
    "/api/v1/feeds/report/{feed_id}": {
      "post": {
        "description": "Create feed report",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "feeds"
        ],
        "summary": "Create feed report",
        "operationId": "feeds-create-feed-report",
        "parameters": [
          {
            "type": "string",
            "description": "Auth Token",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "integer",
            "description": "Feed ID",
            "name": "feed_id",
            "in": "path",
            "required": true
          },
          {
            "description": "JSON Request Body",
            "name": "RequestBody",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/controllers.CreateFeedReportRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.FeedReport"
            }
          }
        }
      }
    },
    "/api/v1/feeds/scroll": {
      "get": {
        "description": "Get feed scroll by feed_id",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "feeds"
        ],
        "summary": "Get feed scroll by feed_id",
        "operationId": "feeds-get-feed-by-scroll-id",
        "parameters": [
          {
            "type": "string",
            "description": "Auth Token",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "integer",
            "description": "Feed ID",
            "name": "feed_id",
            "in": "query",
            "required": true
          },
          {
            "enum": [
              "photo",
              "video"
            ],
            "type": "string",
            "default": "photo",
            "description": "feed type",
            "name": "feed_type",
            "in": "query",
            "required": true
          },
          {
            "type": "integer",
            "default": 1,
            "description": "page number",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 10,
            "description": "number of feed categories in single page",
            "name": "pageSize",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.Feed"
            }
          }
        }
      }
    },
    "/api/v1/feeds/upload-video": {
      "post": {
        "description": "Upload feed video",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/plain"
        ],
        "tags": [
          "feeds"
        ],
        "summary": "Upload feed video",
        "operationId": "feeds-upload-feed-video",
        "parameters": [
          {
            "description": "JSON Request Body",
            "name": "RequestBody",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/controllers.VodUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/api/v1/feeds/upload-video/refresh": {
      "post": {
        "description": "Refresh upload feed video",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/plain"
        ],
        "tags": [
          "feeds"
        ],
        "summary": "Refresh upload feed video",
        "operationId": "feeds-refresh-upload-feed-video",
        "parameters": [
          {
            "description": "JSON Request Body",
            "name": "RequestBody",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/controllers.RefreshTokenRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/api/v1/feeds/user/{user_id}": {
      "get": {
        "description": "Get user feeds",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "feeds"
        ],
        "summary": "Get user feeds",
        "operationId": "feeds-get-user-feeds",
        "parameters": [
          {
            "type": "string",
            "description": "Auth Token",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "integer",
            "description": "User ID",
            "name": "user_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "default": 1,
            "description": "page number",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 10,
            "description": "number of feed categories in single page",
            "name": "pageSize",
            "in": "query"
          },
          {
            "enum": [
              "all",
              "photo",
              "video"
            ],
            "type": "string",
            "default": "all",
            "description": "feed type",
            "name": "feed_type",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/models.Feed"
              }
            }
          }
        }
      }
    },
    "/api/v1/feeds/video-url/{video_id}": {
      "get": {
        "description": "Get feed video URL",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/plain"
        ],
        "tags": [
          "feeds"
        ],
        "summary": "Get feed video URL",
        "operationId": "feeds-get-feed-video-url",
        "parameters": [
          {
            "type": "string",
            "description": "Video ID",
            "name": "video_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/api/v1/feeds/{feed_id}": {
      "get": {
        "description": "Get feed by feed_id",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "feeds"
        ],
        "summary": "Get feed by feed_id",
        "operationId": "feeds-get-feed-by-feed-id",
        "parameters": [
          {
            "type": "string",
            "description": "Auth Token",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "integer",
            "description": "Feed ID",
            "name": "feed_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.Feed"
            }
          }
        }
      },
      "delete": {
        "description": "Delete feed",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "feeds"
        ],
        "summary": "Delete feed",
        "operationId": "feeds-delete-feed",
        "parameters": [
          {
            "type": "string",
            "description": "Auth Token",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "integer",
            "description": "Feed ID",
            "name": "feed_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.Feed"
            }
          }
        }
      },
      "patch": {
        "description": "Update feed",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "feeds"
        ],
        "summary": "Update feed",
        "operationId": "feeds-update-feed",
        "parameters": [
          {
            "type": "string",
            "description": "Auth Token",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "integer",
            "description": "Feed ID",
            "name": "feed_id",
            "in": "path",
            "required": true
          },
          {
            "description": "JSON Request Body",
            "name": "RequestBody",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/controllers.UpdateFeedRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.Feed"
            }
          }
        }
      }
    },
    "/api/v1/influencers/{id}": {
      "get": {
        "description": "Get influencer detail",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/plain"
        ],
        "tags": [
          "influencers"
        ],
        "summary": "Get influencer detail",
        "operationId": "influencers-get-influencer-detail",
        "parameters": [
          {
            "type": "integer",
            "description": "Influencer ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.InfluencerInfo"
            }
          }
        }
      }
    },
    "/api/v1/magazine": {
      "get": {
        "description": "Get list of magazines",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/plain"
        ],
        "tags": [
          "magazines"
        ],
        "summary": "Get list of magazines",
        "operationId": "magazines-magazine-list",
        "parameters": [
          {
            "type": "integer",
            "default": 1,
            "description": "page number",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 10,
            "description": "number of magazine in single page",
            "name": "pageSize",
            "in": "query"
          },
          {
            "type": "string",
            "description": "id to filter magazines by category",
            "name": "category_id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Search By title",
            "name": "title",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/models.Magazine"
              }
            }
          }
        }
      }
    },
    "/api/v1/magazine/categories": {
      "get": {
        "description": "Get list of magazines category",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/plain"
        ],
        "tags": [
          "magazines"
        ],
        "summary": "Get list of magazines category",
        "operationId": "magazines-magazines-category-list",
        "parameters": [
          {
            "type": "integer",
            "default": 1,
            "description": "page number",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 10,
            "description": "number of magazines in single page",
            "name": "pageSize",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/models.MagazineCategory"
              }
            }
          }
        }
      }
    },
    "/api/v1/magazine/get": {
      "get": {
        "description": "Get magazine by slug url",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/plain"
        ],
        "tags": [
          "magazines"
        ],
        "summary": "Get magazine by slug url",
        "operationId": "magazines-get-magazine-by-slug-url",
        "parameters": [
          {
            "type": "string",
            "description": "slug url",
            "name": "slug_url",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.Magazine"
            }
          }
        }
      }
    },
    "/api/v1/magazine/top": {
      "get": {
        "description": "Get list of magazines top article",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/plain"
        ],
        "tags": [
          "magazines"
        ],
        "summary": "Get list of magazines top article",
        "operationId": "magazines-magazine-list-top-article",
        "parameters": [
          {
            "type": "integer",
            "default": 1,
            "description": "page number",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 10,
            "description": "number of magazine in single page",
            "name": "pageSize",
            "in": "query"
          },
          {
            "enum": [
              "TODAY",
              "WEEK",
              "MONTH",
              "YEAR"
            ],
            "type": "string",
            "description": "date type",
            "name": "dateType",
            "in": "query",
            "required": true
          },
          {
            "enum": [
              "image",
              "youtube"
            ],
            "type": "string",
            "description": "date type",
            "name": "typeThumbnail",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/models.Magazine"
              }
            }
          }
        }
      }
    },
    "/api/v1/news": {
      "get": {
        "description": "Get list of news",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/plain"
        ],
        "tags": [
          "news"
        ],
        "summary": "Get list of news",
        "operationId": "news-news-list",
        "parameters": [
          {
            "type": "integer",
            "default": 1,
            "description": "page number",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 10,
            "description": "number of news in single page",
            "name": "pageSize",
            "in": "query"
          },
          {
            "type": "string",
            "description": "id to filter news by news_category_id",
            "name": "news_category_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/models.News"
              }
            }
          }
        }
      }
    },
    "/api/v1/news/categories": {
      "get": {
        "description": "Get list of news category",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/plain"
        ],
        "tags": [
          "news"
        ],
        "summary": "Get list of news category",
        "operationId": "news-news-category-list",
        "parameters": [
          {
            "type": "integer",
            "default": 1,
            "description": "page number",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 10,
            "description": "number of news in single page",
            "name": "pageSize",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/models.NewsCategory"
              }
            }
          }
        }
      }
    },
    "/api/v1/notifications": {
      "get": {
        "description": "Get list of notifications",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/plain"
        ],
        "tags": [
          "notifications"
        ],
        "summary": "Get list of notifications",
        "operationId": "notifications-notifications-list",
        "parameters": [
          {
            "type": "string",
            "description": "Auth Token",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "integer",
            "default": 1,
            "description": "page number",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 10,
            "description": "number of notifications in single page",
            "name": "pageSize",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/models.Notification"
              }
            }
          }
        }
      }
    },
    "/api/v1/notifications/read": {
      "post": {
        "description": "Read all notification",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/plain"
        ],
        "tags": [
          "notifications"
        ],
        "summary": "Read all notification",
        "operationId": "notifications-read-all-notification",
        "parameters": [
          {
            "type": "string",
            "description": "Auth Token",
            "name": "Authorization",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.Notification"
            }
          }
        }
      }
    },
    "/api/v1/notifications/read/{notification_id}": {
      "post": {
        "description": "Read notification",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/plain"
        ],
        "tags": [
          "notifications"
        ],
        "summary": "Read notification",
        "operationId": "notifications-read-notification",
        "parameters": [
          {
            "type": "string",
            "description": "Auth Token",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "integer",
            "description": "Notification ID",
            "name": "notification_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.Notification"
            }
          }
        }
      }
    },
    "/api/v1/partners": {
      "get": {
        "description": "Search partner",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/plain"
        ],
        "tags": [
          "partners"
        ],
        "summary": "Search partner",
        "operationId": "partners-partner-list",
        "parameters": [
          {
            "type": "integer",
            "default": 1,
            "description": "page number",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 10,
            "description": "number of partners in single page",
            "name": "pageSize",
            "in": "query"
          },
          {
            "type": "string",
            "description": "keyword to search partner name",
            "name": "name",
            "in": "query"
          },
          {
            "type": "string",
            "description": "id to filter by category",
            "name": "category_id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "id to filter by city",
            "name": "city_id",
            "in": "query"
          },
          {
            "enum": [
              "TALENT",
              "INFLUENCER",
              "VENUE",
              "VENDOR"
            ],
            "type": "string",
            "description": "search partner by type",
            "name": "partner_type",
            "in": "query"
          },
          {
            "type": "string",
            "description": "available schedule date",
            "name": "schedule_date",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "rating",
            "name": "rating",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "minimum price",
            "name": "min_price",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "maximum price",
            "name": "max_price",
            "in": "query"
          },
          {
            "type": "string",
            "description": "example: ACTOR",
            "name": "sub_level_1",
            "in": "query"
          },
          {
            "type": "string",
            "description": "example: SOLO",
            "name": "sub_level_2",
            "in": "query"
          },
          {
            "type": "string",
            "description": "example: FILM",
            "name": "sub_level_3",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/models.Partner"
              }
            }
          }
        }
      }
    },
    "/api/v1/partners/categorized": {
      "get": {
        "description": "Search categorized partner",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/plain"
        ],
        "tags": [
          "partners"
        ],
        "summary": "Search categorized partner",
        "operationId": "partners-search-catgoriezed-partner",
        "parameters": [
          {
            "type": "integer",
            "default": 1,
            "description": "page number",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 10,
            "description": "number of partners in single page",
            "name": "pageSize",
            "in": "query"
          },
          {
            "type": "string",
            "description": "keyword to search partner name",
            "name": "name",
            "in": "query"
          },
          {
            "type": "string",
            "description": "id to filter by category",
            "name": "category_id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "id to filter by city",
            "name": "city_id",
            "in": "query"
          },
          {
            "enum": [
              "TALENT",
              "INFLUENCER",
              "VENUE",
              "VENDOR"
            ],
            "type": "string",
            "description": "search partner by type",
            "name": "partner_type",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/models.Partner"
              }
            }
          }
        }
      }
    },
    "/api/v1/partners/in/add-bank-account": {
      "post": {
        "description": "Add bank account",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/plain"
        ],
        "tags": [
          "partners"
        ],
        "summary": "Add bank account",
        "operationId": "partners-add-bank-account",
        "parameters": [
          {
            "type": "string",
            "description": "Auth Token",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "description": "JSON Request Body",
            "name": "RequestBody",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/controllers.AddBankAccount"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.PartnerBankAccount"
            }
          }
        }
      }
    },
    "/api/v1/partners/in/add-item": {
      "post": {
        "description": "capacity dan area_size hanya diisi jika venue. sedangkan details_item dan minimum_order hanya diisi jika vendor",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/plain"
        ],
        "tags": [
          "partners"
        ],
        "summary": "Add new item",
        "operationId": "partners-add-new-item",
        "parameters": [
          {
            "type": "string",
            "description": "Auth Token",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "description": "JSON Request Body",
            "name": "RequestBody",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/controllers.AddPartnerItemRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.VenueVendorItem"
            }
          }
        }
      }
    },
    "/api/v1/partners/in/add-service": {
      "post": {
        "description": "Add new service",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/plain"
        ],
        "tags": [
          "partners"
        ],
        "summary": "Add new service",
        "operationId": "partners-add-new-service",
        "parameters": [
          {
            "type": "string",
            "description": "Auth Token",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "description": "JSON Request Body",
            "name": "RequestBody",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/controllers.AddInfluencerServiceRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.InfluencerService"
            }
          }
        }
      }
    },
    "/api/v1/partners/in/delete-bank-account/{id}": {
      "delete": {
        "description": "Delete bank account",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/plain"
        ],
        "tags": [
          "partners"
        ],
        "summary": "Delete bank account",
        "operationId": "partners-delete-bank-account",
        "parameters": [
          {
            "type": "string",
            "description": "Auth Token",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "integer",
            "description": "bank account id",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.PartnerBankAccount"
            }
          }
        }
      }
    },
    "/api/v1/partners/in/delete-item/{item_id}": {
      "delete": {
        "description": "Delete item",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/plain"
        ],
        "tags": [
          "partners"
        ],
        "summary": "Delete item",
        "operationId": "partners-delete-item",
        "parameters": [
          {
            "type": "string",
            "description": "Auth Token",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "integer",
            "description": "Item ID",
            "name": "item_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.VenueVendorItem"
            }
          }
        }
      }
    },
    "/api/v1/partners/in/delete-service/{id}": {
      "delete": {
        "description": "Delete service",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/plain"
        ],
        "tags": [
          "partners"
        ],
        "summary": "Delete service",
        "operationId": "partners-delete-service",
        "parameters": [
          {
            "type": "string",
            "description": "Auth Token",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "integer",
            "description": "Influencer Service ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.InfluencerService"
            }
          }
        }
      }
    },
    "/api/v1/partners/in/edit-item/{item_id}": {
      "patch": {
        "description": "Edit item",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/plain"
        ],
        "tags": [
          "partners"
        ],
        "summary": "Edit item",
        "operationId": "partners-edit-item",
        "parameters": [
          {
            "type": "string",
            "description": "Auth Token",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "integer",
            "description": "Item ID",
            "name": "item_id",
            "in": "path",
            "required": true
          },
          {
            "description": "JSON Request Body",
            "name": "RequestBody",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/controllers.EditPartnerItemRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.VenueVendorItem"
            }
          }
        }
      }
    },
    "/api/v1/partners/in/edit-service/{id}": {
      "patch": {
        "description": "Edit service",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/plain"
        ],
        "tags": [
          "partners"
        ],
        "summary": "Edit service",
        "operationId": "partners-edit-service",
        "parameters": [
          {
            "type": "string",
            "description": "Auth Token",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "integer",
            "description": "Partner ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "JSON Request Body",
            "name": "RequestBody",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/controllers.AddInfluencerServiceRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.InfluencerService"
            }
          }
        }
      }
    },
    "/api/v1/partners/in/item/{item_id}": {
      "get": {
        "description": "Get item detail",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/plain"
        ],
        "tags": [
          "partners"
        ],
        "summary": "Get item detail",
        "operationId": "partners-item",
        "parameters": [
          {
            "type": "string",
            "description": "Auth Token",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "integer",
            "description": "Item ID",
            "name": "item_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.VenueVendorItem"
            }
          }
        }
      }
    },
    "/api/v1/partners/in/manage-schedules": {
      "post": {
        "description": "Manage partner schedule",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/plain"
        ],
        "tags": [
          "partners"
        ],
        "summary": "Manage partner schedule",
        "operationId": "partners-manage-partner-schedules",
        "parameters": [
          {
            "type": "string",
            "description": "Auth Token",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "description": "JSON Request Body",
            "name": "RequestBody",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/controllers.ManagePartnerScheduleRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/models.PartnerCalendar"
              }
            }
          }
        }
      }
    },
    "/api/v1/partners/in/my-orders": {
      "get": {
        "description": "Get my orders",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "partners"
        ],
        "summary": "Get my orders",
        "operationId": "partners-get-orders",
        "parameters": [
          {
            "type": "string",
            "description": "Auth Token",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "integer",
            "default": 1,
            "description": "page number",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 10,
            "description": "number of partners in single page",
            "name": "pageSize",
            "in": "query"
          },
          {
            "type": "string",
            "description": "filter by approval status (0 = menunggu partner, 1 = diterima, 2 = selesai, 3 = diselesaikan oleh partner, -1 = ditolak)",
            "name": "approval_status",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/models.Booking"
              }
            }
          }
        }
      }
    },
    "/api/v1/partners/in/my-orders/{booking_id}": {
      "get": {
        "description": "Get my orders detail",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "partners"
        ],
        "summary": "Get my orders detail",
        "operationId": "partners-get-orders-detail",
        "parameters": [
          {
            "type": "string",
            "description": "Auth Token",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "integer",
            "default": 1,
            "description": "page number",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 10,
            "description": "number of partners in single page",
            "name": "pageSize",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "booking id",
            "name": "booking_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.Booking"
            }
          }
        }
      }
    },
    "/api/v1/partners/in/my-schedules": {
      "get": {
        "description": "Get partner schedules",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/plain"
        ],
        "tags": [
          "partners"
        ],
        "summary": "Get partner schedules",
        "operationId": "partners-partner-schedules",
        "parameters": [
          {
            "type": "string",
            "description": "Auth Token",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "integer",
            "default": 1,
            "description": "page number",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 10,
            "description": "number of banners in single page",
            "name": "pageSize",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/models.PartnerCalendar"
              }
            }
          }
        }
      }
    },
    "/api/v1/partners/in/update-booking-approval": {
      "patch": {
        "description": "Update booking approval",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/plain"
        ],
        "tags": [
          "partners"
        ],
        "summary": "Update booking approval",
        "operationId": "partners-update-booking-approval",
        "parameters": [
          {
            "type": "string",
            "description": "Auth Token",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "description": "JSON Request Body",
            "name": "RequestBody",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/controllers.BookingApprovalRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.Booking"
            }
          }
        }
      }
    },
    "/api/v1/partners/in/update-price-rate": {
      "patch": {
        "description": "Update partner price rate",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/plain"
        ],
        "tags": [
          "partners"
        ],
        "summary": "Update partner price rate",
        "operationId": "partners-update-price-rate",
        "parameters": [
          {
            "type": "string",
            "description": "Auth Token",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "description": "JSON Request Body",
            "name": "RequestBody",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/controllers.UpdatePriceRateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.HistoryPrice"
            }
          }
        }
      }
    },
    "/api/v1/partners/locations": {
      "get": {
        "description": "Get list of locations/cities",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/plain"
        ],
        "tags": [
          "partners"
        ],
        "summary": "Get list of locations/cities",
        "operationId": "partners-partner-location-list",
        "parameters": [
          {
            "type": "integer",
            "default": 1,
            "description": "page number",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 10,
            "description": "number of cities in single page",
            "name": "pageSize",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/models.City"
              }
            }
          }
        }
      }
    },
    "/api/v1/partners/popular": {
      "get": {
        "description": "Get list of popular partners",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/plain"
        ],
        "tags": [
          "partners"
        ],
        "summary": "Get list of popular partners",
        "operationId": "partners-get-partners",
        "parameters": [
          {
            "type": "integer",
            "default": 1,
            "description": "page number",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 10,
            "description": "number of partners in single page",
            "name": "pageSize",
            "in": "query"
          },
          {
            "type": "string",
            "description": "id to filter by city",
            "name": "city_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/models.Partner"
              }
            }
          }
        }
      }
    },
    "/api/v1/partners/schedules/{partner_id}": {
      "get": {
        "description": "Get partner schedules",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/plain"
        ],
        "tags": [
          "partners"
        ],
        "summary": "Get partner schedules",
        "operationId": "partners-partner-schedules-no-auth",
        "parameters": [
          {
            "type": "integer",
            "description": "partner id",
            "name": "partner_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "default": 1,
            "description": "page number",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 10,
            "description": "number of banners in single page",
            "name": "pageSize",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/models.PartnerCalendar"
              }
            }
          }
        }
      }
    },
    "/api/v1/partners/{id}/{partner_type}": {
      "get": {
        "description": "Get partner detail",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/plain"
        ],
        "tags": [
          "partners"
        ],
        "summary": "Get partner detail",
        "operationId": "partners-get-partner-detail",
        "parameters": [
          {
            "type": "integer",
            "description": "Partner ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "enum": [
              "TALENT",
              "INFLUENCER",
              "VENUE",
              "VENDOR"
            ],
            "type": "string",
            "description": "Partner Type",
            "name": "partner_type",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.Partner"
            }
          }
        }
      }
    },
    "/api/v1/partners/{id}/{partner_type}/{date}": {
      "get": {
        "description": "Check partner schedule",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/plain"
        ],
        "tags": [
          "partners"
        ],
        "summary": "Check partner schedule",
        "operationId": "partners-check-partner-schedule",
        "parameters": [
          {
            "type": "integer",
            "description": "Partner ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "enum": [
              "TALENT",
              "INFLUENCER",
              "VENUE",
              "VENDOR"
            ],
            "type": "string",
            "description": "Partner Type",
            "name": "partner_type",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Partner date schedule",
            "name": "date",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/api/v1/payments/notification": {
      "post": {
        "description": "Payment notification handler",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/plain"
        ],
        "tags": [
          "payments"
        ],
        "summary": "Payment notification handler",
        "operationId": "payments-notification",
        "parameters": [
          {
            "description": "notification payload",
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/models.Payload"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.Payment"
            }
          }
        }
      }
    },
    "/api/v1/payments/snap-token": {
      "get": {
        "description": "Get snap token quick",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/plain"
        ],
        "tags": [
          "payments"
        ],
        "summary": "Get snap token quick",
        "operationId": "payments-get-snap-token-quick",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/api/v1/payments/{auth_token}/{booking_id}/sdk/charge": {
      "post": {
        "description": "Charge sdk",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "payments"
        ],
        "summary": "Charge sdk",
        "operationId": "payments-charge-sdk",
        "parameters": [
          {
            "description": "snap payload",
            "name": "payload",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/controllers.SnapRequestSwagger"
            }
          },
          {
            "type": "string",
            "description": "Authorization token",
            "name": "auth_token",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Booking id",
            "name": "booking_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/api/v1/payments/{booking_id}/charge": {
      "post": {
        "description": "Charge",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "payments"
        ],
        "summary": "Charge",
        "operationId": "payments-charge",
        "parameters": [
          {
            "type": "string",
            "description": "Auth Token",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "integer",
            "description": "booking id",
            "name": "booking_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/api/v1/programs": {
      "get": {
        "description": "Get list of programs",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/plain"
        ],
        "tags": [
          "programs"
        ],
        "summary": "Get list of programs",
        "operationId": "programs-program-list",
        "parameters": [
          {
            "type": "integer",
            "default": 1,
            "description": "page number",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 10,
            "description": "number of programs in single page",
            "name": "pageSize",
            "in": "query"
          },
          {
            "enum": [
              "internal",
              "external"
            ],
            "type": "string",
            "description": "id to filter programs by category",
            "name": "category",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/models.Program"
              }
            }
          }
        }
      }
    },
    "/api/v1/promo": {
      "get": {
        "description": "Get list of promo",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/plain"
        ],
        "tags": [
          "promo"
        ],
        "summary": "Get list of promo",
        "operationId": "promo-promo-list",
        "parameters": [
          {
            "type": "integer",
            "default": 1,
            "description": "page number",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 10,
            "description": "number of promo in single page",
            "name": "pageSize",
            "in": "query"
          },
          {
            "type": "string",
            "description": "id to filter promo by tipe id",
            "name": "promo_tipe_id",
            "in": "query"
          },
          {
            "enum": [
              "TALENT",
              "TICKET",
              "INFLUENCER",
              "VENDOR",
              "VENUE",
              "PROGRAM"
            ],
            "type": "string",
            "description": "promo tipe",
            "name": "PromoTipe",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Search By name",
            "name": "name",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/models.Promo"
              }
            }
          }
        }
      }
    },
    "/api/v1/reference/bank": {
      "get": {
        "description": "Get list of banks",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/plain"
        ],
        "tags": [
          "references"
        ],
        "summary": "Get list of banks",
        "operationId": "banks-bank-list",
        "parameters": [
          {
            "type": "integer",
            "default": 1,
            "description": "page number",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 10,
            "description": "number of banks in single page",
            "name": "pageSize",
            "in": "query"
          },
          {
            "type": "string",
            "description": "keyword to search bank name",
            "name": "q",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/models.BankAccount"
              }
            }
          }
        }
      }
    },
    "/api/v1/reference/cities": {
      "get": {
        "description": "Get list of cities",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/plain"
        ],
        "tags": [
          "references"
        ],
        "summary": "Get list of cities",
        "operationId": "cities-city-list",
        "parameters": [
          {
            "type": "integer",
            "default": 1,
            "description": "page number",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 10,
            "description": "number of cities in single page",
            "name": "pageSize",
            "in": "query"
          },
          {
            "type": "string",
            "description": "keyword to search city name",
            "name": "q",
            "in": "query"
          },
          {
            "enum": [
              "TALENT",
              "VENDOR",
              "VENUE",
              "INFLUENCER",
              "ALL"
            ],
            "type": "string",
            "description": "name categories",
            "name": "type",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/models.City"
              }
            }
          }
        }
      }
    },
    "/api/v1/reference/cities/{id}": {
      "get": {
        "description": "Get city detail",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/plain"
        ],
        "tags": [
          "references"
        ],
        "summary": "Get city detail",
        "operationId": "cities-city-detail",
        "parameters": [
          {
            "type": "integer",
            "description": "City ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.City"
            }
          }
        }
      }
    },
    "/api/v1/reference/marital": {
      "get": {
        "description": "Get list of marital_statuses",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/plain"
        ],
        "tags": [
          "references"
        ],
        "summary": "Get list of marital_statuses",
        "operationId": "marital_statuses-marital_statuse-list",
        "parameters": [
          {
            "type": "integer",
            "default": 1,
            "description": "page number",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 10,
            "description": "number of marital_statuses in single page",
            "name": "pageSize",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/models.MaritalStatus"
              }
            }
          }
        }
      }
    },
    "/api/v1/reference/partner-categories/grouped": {
      "get": {
        "description": "Get list of grouped partner categories",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/plain"
        ],
        "tags": [
          "references"
        ],
        "summary": "Get list of grouped partner categories",
        "operationId": "partner-categories-partner-grouped-categories-list",
        "parameters": [
          {
            "type": "integer",
            "default": 1,
            "description": "page number",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 10,
            "description": "number of partner_categories in single page",
            "name": "pageSize",
            "in": "query"
          },
          {
            "enum": [
              "TALENT",
              "VENDOR",
              "VENUE",
              "INFLUENCER"
            ],
            "type": "string",
            "description": "name categories",
            "name": "name_categories",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "example: ACTOR",
            "name": "sub_level_1",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": true,
            "description": "group by sub_level_1",
            "name": "group_sub_level_1",
            "in": "query"
          },
          {
            "type": "string",
            "description": "example: SOLO",
            "name": "sub_level_2",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "group by sub_level_2",
            "name": "group_sub_level_2",
            "in": "query"
          },
          {
            "type": "string",
            "description": "example: FILM",
            "name": "sub_level_3",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "group by sub_level_3",
            "name": "group_sub_level_3",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/models.PartnerCategoriesGrouped"
              }
            }
          }
        }
      }
    },
    "/api/v1/reference/partner_categories": {
      "get": {
        "description": "Get list of partner_categories",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/plain"
        ],
        "tags": [
          "references"
        ],
        "summary": "Get list of partner_categories",
        "operationId": "partner_categories-partner_category-list",
        "parameters": [
          {
            "type": "integer",
            "default": 1,
            "description": "page number",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 10,
            "description": "number of partner_categories in single page",
            "name": "pageSize",
            "in": "query"
          },
          {
            "enum": [
              "TALENT",
              "VENDOR",
              "VENUE",
              "INFLUENCER"
            ],
            "type": "string",
            "description": "name categories",
            "name": "name_categories",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "example: ACTOR",
            "name": "sub_level_1",
            "in": "query"
          },
          {
            "type": "string",
            "description": "example: SOLO",
            "name": "sub_level_2",
            "in": "query"
          },
          {
            "type": "string",
            "description": "example: FILM",
            "name": "sub_level_3",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/models.PartnerCategories"
              }
            }
          }
        }
      }
    },
    "/api/v1/reference/provinces": {
      "get": {
        "description": "Get list of provinces",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/plain"
        ],
        "tags": [
          "references"
        ],
        "summary": "Get list of provinces",
        "operationId": "provinces-province-list",
        "parameters": [
          {
            "type": "integer",
            "default": 1,
            "description": "page number",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 10,
            "description": "number of provinces in single page",
            "name": "pageSize",
            "in": "query"
          },
          {
            "type": "string",
            "description": "keyword to search province name",
            "name": "q",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/models.Province"
              }
            }
          }
        }
      }
    },
    "/api/v1/reference/religion": {
      "get": {
        "description": "Get list of religions",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/plain"
        ],
        "tags": [
          "references"
        ],
        "summary": "Get list of religions",
        "operationId": "religions-religion-list",
        "parameters": [
          {
            "type": "integer",
            "default": 1,
            "description": "page number",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 10,
            "description": "number of religion in single page",
            "name": "pageSize",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/models.Religion"
              }
            }
          }
        }
      }
    },
    "/api/v1/reference/service_type": {
      "get": {
        "description": "Get list of service_types",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/plain"
        ],
        "tags": [
          "references"
        ],
        "summary": "Get list of service_types",
        "operationId": "service_types-service_type-list",
        "parameters": [
          {
            "type": "integer",
            "default": 1,
            "description": "page number",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 10,
            "description": "number of service_type in single page",
            "name": "pageSize",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/models.ServiceType"
              }
            }
          }
        }
      }
    },
    "/api/v1/reference/socmed_type": {
      "get": {
        "description": "Get list of socmed_types",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/plain"
        ],
        "tags": [
          "references"
        ],
        "summary": "Get list of socmed_types",
        "operationId": "socmed_types-socmed_type-list",
        "parameters": [
          {
            "type": "integer",
            "default": 1,
            "description": "page number",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 10,
            "description": "number of socmed_type in single page",
            "name": "pageSize",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/models.Socmed_type"
              }
            }
          }
        }
      }
    },
    "/api/v1/reviews/partner/create": {
      "post": {
        "description": "Create Review",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Partner Review"
        ],
        "summary": "Create Review",
        "operationId": "ReviewCreate",
        "parameters": [
          {
            "type": "string",
            "description": "Auth Token",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "description": "Request payload",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/controllers.ReviewRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.PartnerReview"
            }
          }
        }
      }
    },
    "/api/v1/reviews/partner/{id}": {
      "get": {
        "description": "List Review By Partner ID",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Partner Review"
        ],
        "summary": "List Review By Partner ID",
        "operationId": "ReviewList",
        "parameters": [
          {
            "type": "string",
            "description": "Auth Token",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "integer",
            "description": "Partner ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/models.PartnerReview"
              }
            }
          }
        }
      }
    },
    "/api/v1/talents/rider": {
      "post": {
        "description": "Create talent rider",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/plain"
        ],
        "tags": [
          "talents"
        ],
        "summary": "Create talent rider",
        "operationId": "talents-create-talent-rider",
        "parameters": [
          {
            "type": "string",
            "description": "Auth Token",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "description": "JSON Request Body",
            "name": "RequestBody",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/controllers.CreateTalentRiderRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.TalentRider"
            }
          }
        }
      }
    },
    "/api/v1/talents/rider/{talent_rider_id}": {
      "delete": {
        "description": "Delete talent rider",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/plain"
        ],
        "tags": [
          "talents"
        ],
        "summary": "Delete talent rider",
        "operationId": "talents-delete-talent-rider",
        "parameters": [
          {
            "type": "string",
            "description": "Auth Token",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "integer",
            "description": "Talent rider ID",
            "name": "talent_rider_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.TalentRider"
            }
          }
        }
      },
      "patch": {
        "description": "Update talent rider",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/plain"
        ],
        "tags": [
          "talents"
        ],
        "summary": "Update talent rider",
        "operationId": "talents-update-talent-rider",
        "parameters": [
          {
            "type": "string",
            "description": "Auth Token",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "integer",
            "description": "Talent rider ID",
            "name": "talent_rider_id",
            "in": "path",
            "required": true
          },
          {
            "description": "JSON Request Body",
            "name": "RequestBody",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/controllers.CreateTalentRiderRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.TalentRider"
            }
          }
        }
      }
    },
    "/api/v1/talents/{id}": {
      "get": {
        "description": "Get talent detail",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/plain"
        ],
        "tags": [
          "talents"
        ],
        "summary": "Get talent detail",
        "operationId": "talents-get-talent-detail",
        "parameters": [
          {
            "type": "integer",
            "description": "Talent ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.Talent"
            }
          }
        }
      }
    },
    "/api/v1/ticket": {
      "get": {
        "description": "Get list of ticket",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/plain"
        ],
        "tags": [
          "ticket"
        ],
        "summary": "Get list of ticket",
        "operationId": "ticket-ticket-list",
        "parameters": [
          {
            "type": "integer",
            "default": 1,
            "description": "page number",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 10,
            "description": "number of ticket in single page",
            "name": "pageSize",
            "in": "query"
          },
          {
            "type": "string",
            "description": "id to filter ticket by category",
            "name": "category_id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Search By title",
            "name": "title",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/models.Ticket"
              }
            }
          }
        }
      }
    },
    "/api/v1/ticket/categories": {
      "get": {
        "description": "Get list of ticket category",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/plain"
        ],
        "tags": [
          "ticket"
        ],
        "summary": "Get list of ticket category",
        "operationId": "ticket-ticket-category-list",
        "parameters": [
          {
            "type": "integer",
            "default": 1,
            "description": "page number",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 10,
            "description": "number of ticket in single page",
            "name": "pageSize",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/models.TicketCategory"
              }
            }
          }
        }
      }
    },
    "/api/v1/ticket/items": {
      "get": {
        "description": "Get item of ticket",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/plain"
        ],
        "tags": [
          "ticket"
        ],
        "summary": "Get item of ticket",
        "operationId": "ticket-item-list",
        "parameters": [
          {
            "type": "string",
            "description": "id to filter item ticket for ticket",
            "name": "ticket_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/models.Ticket"
              }
            }
          }
        }
      }
    },
    "/api/v1/ticket/lineup": {
      "get": {
        "description": "Get lineup of ticket",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/plain"
        ],
        "tags": [
          "ticket"
        ],
        "summary": "Get lineup of ticket",
        "operationId": "ticket-lineup-list",
        "parameters": [
          {
            "type": "string",
            "description": "id to filter item ticket for ticket",
            "name": "ticket_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/models.TicketLineup"
              }
            }
          }
        }
      }
    },
    "/api/v1/tnv/create": {
      "post": {
        "description": "Create tnv",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "tnv"
        ],
        "summary": "Create tnv",
        "operationId": "tnv-create",
        "parameters": [
          {
            "type": "string",
            "description": "Auth Token",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "description": "JSON Request Body",
            "name": "RequestBody",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/controllers.CreateTnvData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.Tnv"
            }
          }
        }
      }
    },
    "/api/v1/tnv/resend-otp": {
      "post": {
        "description": "Verify OTP",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "tnv"
        ],
        "summary": "Verify OTP",
        "operationId": "tnv-resend-otp-no-auth",
        "parameters": [
          {
            "description": "JSON Request Body",
            "name": "RequestBody",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/controllers.ResendOTPNoAuthRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.OTPNoAuth"
            }
          }
        }
      }
    },
    "/api/v1/tnv/verify-otp": {
      "post": {
        "description": "Verify OTP",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "tnv"
        ],
        "summary": "Verify OTP",
        "operationId": "tnv-verify-otp-no-auth",
        "parameters": [
          {
            "description": "JSON Request Body",
            "name": "RequestBody",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/controllers.VerifyOTPNoAuthRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.OTPNoAuth"
            }
          }
        }
      }
    },
    "/api/v1/user/add-bank-account": {
      "post": {
        "description": "Add bank account",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/plain"
        ],
        "tags": [
          "users"
        ],
        "summary": "Add bank account",
        "operationId": "users-add-bank-account",
        "parameters": [
          {
            "type": "string",
            "description": "Auth Token",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "description": "JSON Request Body",
            "name": "RequestBody",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/controllers.AddBankAccount"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.UserBankAccount"
            }
          }
        }
      }
    },
    "/api/v1/user/block/{user_id}": {
      "post": {
        "description": "Block a user",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/plain"
        ],
        "tags": [
          "users"
        ],
        "summary": "Block a user",
        "operationId": "users-block-block-user",
        "parameters": [
          {
            "type": "string",
            "description": "Auth Token",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "integer",
            "description": "user id you want to block",
            "name": "user_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.UserBlock"
            }
          }
        }
      }
    },
    "/api/v1/user/change-password": {
      "patch": {
        "description": "Change password",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "users"
        ],
        "summary": "Change password",
        "operationId": "users-change-password",
        "parameters": [
          {
            "type": "string",
            "description": "Auth Token",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "description": "JSON Request Body",
            "name": "RequestBody",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/controllers.ChangePasswordRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.User"
            }
          }
        }
      }
    },
    "/api/v1/user/delete-bank-account/{id}": {
      "delete": {
        "description": "Delete bank account",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/plain"
        ],
        "tags": [
          "users"
        ],
        "summary": "Delete bank account",
        "operationId": "users-delete-bank-account",
        "parameters": [
          {
            "type": "string",
            "description": "Auth Token",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "integer",
            "description": "bank account id",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.UserBankAccount"
            }
          }
        }
      }
    },
    "/api/v1/user/edit-partner-profile": {
      "patch": {
        "description": "Edit partner profile",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "users"
        ],
        "summary": "Edit partner profile",
        "operationId": "users-edit-partner-profile",
        "parameters": [
          {
            "type": "string",
            "description": "Auth Token",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "description": "JSON Request Body",
            "name": "RequestBody",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/controllers.EditPartnerRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.User"
            }
          }
        }
      }
    },
    "/api/v1/user/edit-user-profile": {
      "patch": {
        "description": "Edit user profile",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "users"
        ],
        "summary": "Edit user profile",
        "operationId": "users-edit-user-profile",
        "parameters": [
          {
            "type": "string",
            "description": "Auth Token",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "description": "JSON Request Body",
            "name": "RequestBody",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/controllers.EditUserRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.User"
            }
          }
        }
      }
    },
    "/api/v1/user/my-profile": {
      "post": {
        "description": "Get my profile",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "users"
        ],
        "summary": "Get my profile",
        "operationId": "users-my-profile",
        "parameters": [
          {
            "type": "string",
            "description": "Auth Token",
            "name": "Authorization",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/helper.HttpResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/models.User"
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/api/v1/user/report/categories": {
      "get": {
        "description": "Get user report categories",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/plain"
        ],
        "tags": [
          "users"
        ],
        "summary": "Get user report categories",
        "operationId": "users-get-user-report-categories",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/models.UserReportCategory"
              }
            }
          }
        }
      }
    },
    "/api/v1/user/report/{user_id}": {
      "post": {
        "description": "Create user report",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "users"
        ],
        "summary": "Create user report",
        "operationId": "users-create-user-report",
        "parameters": [
          {
            "type": "string",
            "description": "Auth Token",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "integer",
            "description": "Feed ID",
            "name": "user_id",
            "in": "path",
            "required": true
          },
          {
            "description": "JSON Request Body",
            "name": "RequestBody",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/controllers.CreateUserReportRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.UserReport"
            }
          }
        }
      }
    },
    "/api/v1/user/request-otp": {
      "post": {
        "description": "Request OTP",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "users"
        ],
        "summary": "Request OTP",
        "operationId": "users-request-otp",
        "parameters": [
          {
            "type": "string",
            "description": "Auth Token",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "description": "JSON Request Body",
            "name": "RequestBody",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/controllers.RequestOTPRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/api/v1/user/upload-profile-photo": {
      "post": {
        "description": "Upload profile photo",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/plain"
        ],
        "tags": [
          "users"
        ],
        "summary": "Upload profile photo",
        "operationId": "users-upload-profile-photo",
        "parameters": [
          {
            "type": "string",
            "description": "Auth Token",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "file",
            "description": "image file",
            "name": "image",
            "in": "formData",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/api/v1/vendors/{id}": {
      "get": {
        "description": "Get vendor detail",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/plain"
        ],
        "tags": [
          "vendors"
        ],
        "summary": "Get vendor detail",
        "operationId": "vendors-get-vendor-detail",
        "parameters": [
          {
            "type": "integer",
            "description": "Vendor ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.Vendor"
            }
          }
        }
      }
    },
    "/api/v1/venues/{id}": {
      "get": {
        "description": "Get venue detail",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/plain"
        ],
        "tags": [
          "venue"
        ],
        "summary": "Get venue detail",
        "operationId": "venues-get-venue-detail",
        "parameters": [
          {
            "type": "integer",
            "description": "Venue ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.VenueInfo"
            }
          }
        }
      }
    },
    "/api/v1/videos": {
      "get": {
        "description": "Get list of videos",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/plain"
        ],
        "tags": [
          "videos"
        ],
        "summary": "Get list of videos",
        "operationId": "videos-videos-list",
        "parameters": [
          {
            "type": "integer",
            "default": 1,
            "description": "page number",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 10,
            "description": "number of videos in single page",
            "name": "pageSize",
            "in": "query"
          },
          {
            "type": "string",
            "description": "id to filter videos by videos_category_id",
            "name": "videos_category_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/models.Video"
              }
            }
          }
        }
      }
    },
    "/api/v1/videos/categories": {
      "get": {
        "description": "Get list of videos category",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/plain"
        ],
        "tags": [
          "videos"
        ],
        "summary": "Get list of videos category",
        "operationId": "videos-videos-category-list",
        "parameters": [
          {
            "type": "integer",
            "default": 1,
            "description": "page number",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 10,
            "description": "number of videos in single page",
            "name": "pageSize",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/models.VideosCategory"
              }
            }
          }
        }
      }
    },
    "/api/v1/vod": {
      "get": {
        "description": "List Vod",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "VOD"
        ],
        "summary": "List Vod",
        "operationId": "vod-vod-list",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/models.Vod"
              }
            }
          }
        }
      }
    },
    "/api/v1/vod/encode-base64": {
      "post": {
        "description": "Encode file to base64",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/plain"
        ],
        "tags": [
          "VOD"
        ],
        "summary": "Encode file to base64",
        "operationId": "VOD-encode-video-to-base64",
        "parameters": [
          {
            "type": "file",
            "description": "file",
            "name": "files",
            "in": "formData",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/api/v1/vod/{vod_id}": {
      "get": {
        "description": "Get vod by id",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "VOD"
        ],
        "summary": "Get vod by id",
        "operationId": "vod-get-vod",
        "parameters": [
          {
            "type": "integer",
            "description": "VOD ID",
            "name": "vod_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.Vod"
            }
          }
        }
      }
    },
    "/healthcheck": {
      "get": {
        "description": "Check API health status",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "healthcheck"
        ],
        "summary": "Check API health status",
        "operationId": "healthcheck-healthcheck",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "controllers.AddBankAccount": {
      "type": "object",
      "properties": {
        "account_name": {
          "type": "string"
        },
        "account_number": {
          "type": "string"
        },
        "bank_id": {
          "type": "integer"
        }
      }
    },
    "controllers.AddInfluencerServiceRequest": {
      "type": "object",
      "properties": {
        "post_duration": {
          "type": "integer"
        },
        "price_rate": {
          "type": "integer"
        },
        "service_id": {
          "type": "integer"
        },
        "total_post": {
          "type": "integer"
        }
      }
    },
    "controllers.AddPartnerItemRequest": {
      "type": "object",
      "properties": {
        "area_size": {
          "type": "integer"
        },
        "capacity": {
          "type": "integer"
        },
        "details_items": {
          "type": "string"
        },
        "image_filenames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "minimum_order": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "price": {
          "type": "integer"
        },
        "price_discount": {
          "type": "integer"
        },
        "quota": {
          "type": "integer"
        }
      }
    },
    "controllers.BillingAddress": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string",
          "example": "bdg"
        },
        "city": {
          "type": "string",
          "example": "bdy"
        },
        "country_code": {
          "type": "string",
          "example": "IDN"
        },
        "first_name": {
          "type": "string",
          "example": "Azhary"
        },
        "last_name": {
          "type": "string",
          "example": "Arliansyah"
        },
        "phone": {
          "type": "string",
          "example": "082278833804"
        },
        "postal_code": {
          "type": "string",
          "example": ""
        }
      }
    },
    "controllers.BookingApprovalRequest": {
      "type": "object",
      "properties": {
        "approval_status": {
          "type": "integer"
        },
        "booking_id": {
          "type": "integer"
        },
        "image_proof": {
          "type": "string"
        }
      }
    },
    "controllers.BookmarkedPartnerInput": {
      "type": "object",
      "properties": {
        "partner_id": {
          "type": "integer"
        }
      }
    },
    "controllers.ChangePasswordRequest": {
      "type": "object",
      "properties": {
        "otp": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "repeat_password": {
          "type": "string"
        }
      }
    },
    "controllers.CreateCommentRequest": {
      "type": "object",
      "properties": {
        "comment": {
          "type": "string"
        }
      }
    },
    "controllers.CreateFeedCommentRequest": {
      "type": "object",
      "properties": {
        "comment": {
          "type": "string"
        }
      }
    },
    "controllers.CreateFeedReportRequest": {
      "type": "object",
      "properties": {
        "report_category_id": {
          "type": "integer"
        }
      }
    },
    "controllers.CreateFeedRequest": {
      "type": "object",
      "properties": {
        "caption": {
          "type": "string"
        },
        "feed_category_id": {
          "type": "integer"
        },
        "feed_media": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/controllers.Media"
          }
        },
        "feed_type": {
          "type": "string"
        }
      }
    },
    "controllers.CreateMagazineReportRequest": {
      "type": "object",
      "properties": {
        "comment_id": {
          "type": "integer"
        },
        "report_category_id": {
          "type": "integer"
        }
      }
    },
    "controllers.CreateTalentRiderRequest": {
      "type": "object",
      "properties": {
        "details": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "controllers.CreateTnvData": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        },
        "category": {
          "type": "string"
        },
        "city_id": {
          "type": "integer"
        },
        "email": {
          "type": "string"
        },
        "id_number": {
          "type": "string"
        },
        "instagram": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "phone_number": {
          "type": "string"
        }
      }
    },
    "controllers.CreateUserReportRequest": {
      "type": "object",
      "properties": {
        "report_category_id": {
          "type": "integer"
        }
      }
    },
    "controllers.CreditCard": {
      "type": "object",
      "properties": {
        "authentication": {
          "type": "string",
          "example": "rba"
        },
        "save_card": {
          "type": "boolean",
          "example": false
        },
        "secure": {
          "type": "boolean",
          "example": false
        }
      }
    },
    "controllers.CustomerDetails": {
      "type": "object",
      "properties": {
        "billing_address": {
          "$ref": "#/definitions/controllers.BillingAddress"
        },
        "email": {
          "type": "string",
          "example": "arliansyah_azhary@yahoo.com"
        },
        "first_name": {
          "type": "string",
          "example": "Azhary"
        },
        "last_name": {
          "type": "string",
          "example": "Arliansyah"
        },
        "phone": {
          "type": "string",
          "example": "083248972943"
        },
        "shipping_address": {
          "$ref": "#/definitions/controllers.ShippingAddress"
        }
      }
    },
    "controllers.EditBookingRequest": {
      "type": "object",
      "properties": {
        "buyer_address": {
          "type": "string"
        },
        "buyer_name": {
          "type": "string"
        },
        "buyer_phone_number": {
          "type": "string"
        }
      }
    },
    "controllers.EditInfluencer": {
      "type": "object",
      "required": [
        "date_of_birth",
        "marital_id",
        "religion_id",
        "stage_name"
      ],
      "properties": {
        "date_of_birth": {
          "type": "string"
        },
        "marital_id": {
          "type": "integer"
        },
        "religion_id": {
          "type": "integer"
        },
        "stage_name": {
          "type": "string"
        }
      }
    },
    "controllers.EditPartnerItemRequest": {
      "type": "object",
      "properties": {
        "area_size": {
          "type": "integer"
        },
        "capacity": {
          "type": "integer"
        },
        "deleted_item_image_id": {
          "type": "array",
          "items": {
            "type": "integer"
          }
        },
        "details_items": {
          "type": "string"
        },
        "image_filenames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "minimum_order": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "price": {
          "type": "integer"
        },
        "quota": {
          "type": "integer"
        }
      }
    },
    "controllers.EditPartnerRequest": {
      "type": "object",
      "required": [
        "partner_type"
      ],
      "properties": {
        "influencer": {
          "$ref": "#/definitions/controllers.EditInfluencer"
        },
        "partner": {
          "$ref": "#/definitions/controllers.Partner"
        },
        "partner_type": {
          "type": "string"
        },
        "talent": {
          "$ref": "#/definitions/controllers.EditTalent"
        },
        "user": {
          "$ref": "#/definitions/controllers.EditUser"
        },
        "vendor": {
          "$ref": "#/definitions/controllers.EditVendor"
        },
        "venue": {
          "$ref": "#/definitions/controllers.EditVenue"
        }
      }
    },
    "controllers.EditTalent": {
      "type": "object",
      "properties": {
        "date_of_birth": {
          "type": "string"
        },
        "religion_id": {
          "type": "integer"
        },
        "stage_name": {
          "type": "string"
        }
      }
    },
    "controllers.EditUser": {
      "type": "object",
      "required": [
        "email",
        "name",
        "phone_number",
        "username"
      ],
      "properties": {
        "address": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "phone_number": {
          "type": "string"
        },
        "username": {
          "type": "string"
        }
      }
    },
    "controllers.EditUserRequest": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/controllers.EditUser"
        }
      }
    },
    "controllers.EditVendor": {
      "type": "object",
      "required": [
        "close",
        "open",
        "pic_address",
        "pic_name",
        "pic_phone_number"
      ],
      "properties": {
        "close": {
          "type": "string"
        },
        "open": {
          "type": "string"
        },
        "pic_address": {
          "type": "string"
        },
        "pic_name": {
          "type": "string"
        },
        "pic_phone_number": {
          "type": "string"
        }
      }
    },
    "controllers.EditVenue": {
      "type": "object",
      "required": [
        "pic_address",
        "pic_name",
        "pic_phone_number"
      ],
      "properties": {
        "pic_address": {
          "type": "string"
        },
        "pic_name": {
          "type": "string"
        },
        "pic_phone_number": {
          "type": "string"
        }
      }
    },
    "controllers.ForgotPasswordRequest": {
      "type": "object",
      "properties": {
        "otp": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "repeat_password": {
          "type": "string"
        }
      }
    },
    "controllers.Influencer": {
      "type": "object",
      "required": [
        "date_of_birth",
        "marital_id",
        "religion_id",
        "stage_name"
      ],
      "properties": {
        "date_of_birth": {
          "type": "string"
        },
        "influencer_images": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "influencer_services": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/controllers.InfluencerService"
          }
        },
        "marital_id": {
          "type": "integer"
        },
        "religion_id": {
          "type": "integer"
        },
        "stage_name": {
          "type": "string"
        }
      }
    },
    "controllers.InfluencerBookingRequest": {
      "type": "object",
      "properties": {
        "buyer_address": {
          "type": "string"
        },
        "buyer_name": {
          "type": "string"
        },
        "buyer_phone_number": {
          "type": "string"
        },
        "details": {
          "type": "string"
        },
        "documents": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "note": {
          "type": "string"
        },
        "partner_id": {
          "type": "integer"
        },
        "post_date": {
          "type": "string"
        },
        "product_name": {
          "type": "string"
        },
        "services_id": {
          "type": "array",
          "items": {
            "type": "integer"
          }
        },
        "to_do_list": {
          "type": "string"
        }
      }
    },
    "controllers.InfluencerService": {
      "type": "object",
      "required": [
        "post_duration",
        "price_rate",
        "service_id",
        "total_post"
      ],
      "properties": {
        "post_duration": {
          "type": "integer"
        },
        "price_rate": {
          "type": "integer"
        },
        "service_id": {
          "type": "integer"
        },
        "total_post": {
          "type": "integer"
        }
      }
    },
    "controllers.LoginRequest": {
      "type": "object",
      "properties": {
        "password": {
          "type": "string"
        },
        "player_id": {
          "type": "string"
        },
        "username": {
          "type": "string"
        }
      }
    },
    "controllers.ManagePartnerScheduleRequest": {
      "type": "object",
      "properties": {
        "added_schedules_date": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "removed_schedules_date": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "controllers.Media": {
      "type": "object",
      "properties": {
        "image_url": {
          "type": "string"
        },
        "original_url": {
          "type": "string"
        },
        "video_id": {
          "type": "string"
        }
      }
    },
    "controllers.MidtransItemDetail": {
      "type": "object",
      "properties": {
        "brand": {
          "type": "string"
        },
        "category": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "merchant_name": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "price": {
          "type": "integer"
        },
        "quantity": {
          "type": "integer"
        }
      }
    },
    "controllers.Partner": {
      "type": "object",
      "required": [
        "category_id",
        "city_id",
        "description",
        "name"
      ],
      "properties": {
        "account_number": {
          "type": "string"
        },
        "bank_id": {
          "type": "integer"
        },
        "category_id": {
          "type": "integer"
        },
        "city_id": {
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "gender": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "rating": {
          "type": "integer"
        }
      }
    },
    "controllers.PartnerSocmed": {
      "type": "object",
      "required": [
        "account_name",
        "followers",
        "socmed_id"
      ],
      "properties": {
        "account_name": {
          "type": "string"
        },
        "followers": {
          "type": "integer"
        },
        "socmed_id": {
          "type": "integer"
        }
      }
    },
    "controllers.RefreshTokenRequest": {
      "type": "object",
      "properties": {
        "video_id": {
          "type": "string"
        }
      }
    },
    "controllers.RegisterPartnerRequest": {
      "type": "object",
      "required": [
        "register_as"
      ],
      "properties": {
        "influencer": {
          "$ref": "#/definitions/controllers.Influencer"
        },
        "partner": {
          "$ref": "#/definitions/controllers.Partner"
        },
        "partner_socmeds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/controllers.PartnerSocmed"
          }
        },
        "register_as": {
          "type": "string"
        },
        "talent": {
          "$ref": "#/definitions/controllers.Talent"
        },
        "user": {
          "$ref": "#/definitions/controllers.User"
        },
        "vendor": {
          "$ref": "#/definitions/controllers.Vendor"
        },
        "venue": {
          "$ref": "#/definitions/controllers.Venue"
        }
      }
    },
    "controllers.RegisterUserRequest": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/controllers.User"
        }
      }
    },
    "controllers.RequestOTPNoAuthRequest": {
      "type": "object",
      "properties": {
        "category": {
          "type": "string"
        },
        "email": {
          "type": "string"
        }
      }
    },
    "controllers.RequestOTPRequest": {
      "type": "object",
      "properties": {
        "category": {
          "type": "string"
        }
      }
    },
    "controllers.ResendOTPNoAuthRequest": {
      "type": "object",
      "required": [
        "category",
        "email",
        "platform"
      ],
      "properties": {
        "category": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "platform": {
          "type": "string"
        }
      }
    },
    "controllers.ReviewRequest": {
      "type": "object",
      "properties": {
        "content": {
          "type": "string"
        },
        "image_filename": {
          "type": "string"
        },
        "partner_id": {
          "type": "integer"
        },
        "rating": {
          "type": "integer"
        }
      }
    },
    "controllers.ShippingAddress": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string",
          "example": "bdg"
        },
        "city": {
          "type": "string",
          "example": "bdy"
        },
        "country_code": {
          "type": "string",
          "example": "IDN"
        },
        "first_name": {
          "type": "string",
          "example": "Azhary"
        },
        "last_name": {
          "type": "string",
          "example": "Arliansyah"
        },
        "phone": {
          "type": "string",
          "example": "082278833804"
        },
        "postal_code": {
          "type": "string",
          "example": "40523"
        }
      }
    },
    "controllers.SnapRequestSwagger": {
      "type": "object",
      "properties": {
        "credit_card": {
          "$ref": "#/definitions/controllers.CreditCard"
        },
        "customer_details": {
          "$ref": "#/definitions/controllers.CustomerDetails"
        },
        "item_details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/controllers.MidtransItemDetail"
          }
        },
        "transaction_details": {
          "$ref": "#/definitions/controllers.TransactionDetails"
        }
      }
    },
    "controllers.Talent": {
      "type": "object",
      "properties": {
        "date_of_birth": {
          "type": "string"
        },
        "price_rate": {
          "type": "integer"
        },
        "religion_id": {
          "type": "integer"
        },
        "stage_name": {
          "type": "string"
        },
        "talent_images": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "talent_riders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/controllers.TalentRider"
          }
        }
      }
    },
    "controllers.TalentBookingRequest": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        },
        "buyer_address": {
          "type": "string"
        },
        "buyer_name": {
          "type": "string"
        },
        "buyer_phone_number": {
          "type": "string"
        },
        "city_id": {
          "type": "integer"
        },
        "event_date": {
          "type": "string"
        },
        "event_name": {
          "type": "string"
        },
        "event_time": {
          "type": "string"
        },
        "note": {
          "type": "string"
        },
        "partner_id": {
          "type": "integer"
        }
      }
    },
    "controllers.TalentRider": {
      "type": "object",
      "properties": {
        "details": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "controllers.TransactionDetails": {
      "type": "object",
      "properties": {
        "booking_id": {
          "type": "integer"
        },
        "currency": {
          "type": "string",
          "example": "IDR"
        },
        "gross_amount": {
          "type": "integer",
          "example": 800000
        },
        "order_id": {
          "type": "string",
          "example": "1601664526580"
        }
      }
    },
    "controllers.UpdateFeedRequest": {
      "type": "object",
      "properties": {
        "caption": {
          "type": "string"
        },
        "deleted_feed_media_id": {
          "type": "array",
          "items": {
            "type": "integer"
          }
        },
        "feed_category_id": {
          "type": "integer"
        },
        "feed_media": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/controllers.Media"
          }
        },
        "feed_type": {
          "type": "string"
        }
      }
    },
    "controllers.UpdatePriceRateRequest": {
      "type": "object",
      "properties": {
        "item_id": {
          "type": "integer"
        },
        "price_rate": {
          "type": "integer"
        }
      }
    },
    "controllers.User": {
      "type": "object",
      "required": [
        "confirm_password",
        "email",
        "name",
        "password",
        "phone_number",
        "username"
      ],
      "properties": {
        "address": {
          "type": "string"
        },
        "confirm_password": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "phone_number": {
          "type": "string"
        },
        "username": {
          "type": "string"
        }
      }
    },
    "controllers.Vendor": {
      "type": "object",
      "required": [
        "close",
        "open",
        "pic_name",
        "pic_phone_number"
      ],
      "properties": {
        "close": {
          "type": "string"
        },
        "open": {
          "type": "string"
        },
        "pic_name": {
          "type": "string"
        },
        "pic_phone_number": {
          "type": "string"
        },
        "venue_vendor_items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/controllers.VenueVendorItem"
          }
        }
      }
    },
    "controllers.VendorBookingRequest": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        },
        "buyer_address": {
          "type": "string"
        },
        "buyer_name": {
          "type": "string"
        },
        "buyer_phone_number": {
          "type": "string"
        },
        "city_id": {
          "type": "integer"
        },
        "end_time": {
          "type": "string"
        },
        "event_date": {
          "type": "string"
        },
        "event_name": {
          "type": "string"
        },
        "note": {
          "type": "string"
        },
        "partner_id": {
          "type": "integer"
        },
        "start_time": {
          "type": "string"
        },
        "vendor_item_book": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/controllers.VendorItemBook"
          }
        }
      }
    },
    "controllers.VendorItemBook": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "integer"
        },
        "item_id": {
          "type": "integer"
        }
      }
    },
    "controllers.Venue": {
      "type": "object",
      "required": [
        "pic_name",
        "pic_phone_number"
      ],
      "properties": {
        "pic_name": {
          "type": "string"
        },
        "pic_phone_number": {
          "type": "string"
        },
        "venue_vendor_items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/controllers.VenueVendorItem"
          }
        }
      }
    },
    "controllers.VenueBookingRequest": {
      "type": "object",
      "properties": {
        "buyer_address": {
          "type": "string"
        },
        "buyer_name": {
          "type": "string"
        },
        "buyer_phone_number": {
          "type": "string"
        },
        "event_date": {
          "type": "string"
        },
        "event_name": {
          "type": "string"
        },
        "event_time": {
          "type": "string"
        },
        "invitation_quota": {
          "type": "integer"
        },
        "item_id": {
          "type": "integer"
        },
        "note": {
          "type": "string"
        },
        "partner_id": {
          "type": "integer"
        }
      }
    },
    "controllers.VenueVendorItem": {
      "type": "object",
      "required": [
        "area_size",
        "capacity",
        "detail_items",
        "minimum_order",
        "name",
        "price",
        "quota"
      ],
      "properties": {
        "area_size": {
          "type": "integer"
        },
        "capacity": {
          "type": "integer"
        },
        "detail_items": {
          "type": "string"
        },
        "minimum_order": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "price": {
          "type": "integer"
        },
        "quota": {
          "type": "integer"
        },
        "venue_vendor_item_images": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "controllers.VerifyOTPNoAuthRequest": {
      "type": "object",
      "required": [
        "category",
        "code",
        "email"
      ],
      "properties": {
        "category": {
          "type": "string"
        },
        "code": {
          "type": "string"
        },
        "email": {
          "type": "string"
        }
      }
    },
    "controllers.VerifyOTPRequest": {
      "type": "object",
      "required": [
        "category",
        "code",
        "user_id"
      ],
      "properties": {
        "category": {
          "type": "string"
        },
        "code": {
          "type": "string"
        },
        "user_id": {
          "type": "integer"
        }
      }
    },
    "controllers.VodUpdateRequest": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "filename": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "watermark": {
          "type": "boolean"
        }
      }
    },
    "helper.HttpResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "additionalProperties": true
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "integer"
        }
      }
    },
    "models.Ads": {
      "type": "object",
      "properties": {
        "category": {
          "type": "string"
        },
        "client_id": {
          "type": "string"
        },
        "created_at": {
          "type": "string"
        },
        "desktop_active": {
          "type": "integer"
        },
        "id": {
          "type": "integer"
        },
        "mobile_active": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "placement": {
          "$ref": "#/definitions/models.Placement"
        },
        "source": {
          "type": "string"
        },
        "target_url": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        }
      }
    },
    "models.Author": {
      "type": "object",
      "properties": {
        "avatar_url": {
          "type": "string"
        },
        "created_at": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        }
      }
    },
    "models.BankAccount": {
      "type": "object",
      "properties": {
        "bank_code": {
          "type": "string"
        },
        "bank_name": {
          "type": "string"
        },
        "created_at": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "updated_at": {
          "type": "string"
        }
      }
    },
    "models.Banner": {
      "type": "object",
      "properties": {
        "category": {
          "type": "string"
        },
        "created_at": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "images": {
          "type": "string"
        },
        "link": {
          "type": "string"
        },
        "sub_title": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        }
      }
    },
    "models.Booking": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        },
        "approval_status": {
          "type": "integer"
        },
        "approval_status_string": {
          "type": "string"
        },
        "created_at": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "note": {
          "type": "string"
        },
        "partner_id": {
          "type": "integer"
        },
        "phone_number": {
          "type": "string"
        },
        "proof": {
          "type": "string"
        },
        "refund_status": {
          "type": "integer"
        },
        "refund_status_string": {
          "type": "string"
        },
        "status_booking": {
          "type": "integer"
        },
        "updated_at": {
          "type": "string"
        },
        "user_id": {
          "type": "integer"
        }
      }
    },
    "models.BookingDetail": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        },
        "approval_status": {
          "type": "integer"
        },
        "approval_status_string": {
          "type": "string"
        },
        "created_at": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "note": {
          "type": "string"
        },
        "partner": {
          "$ref": "#/definitions/models.Partner"
        },
        "partner_id": {
          "type": "integer"
        },
        "partner_type": {
          "type": "string"
        },
        "phone_number": {
          "type": "string"
        },
        "proof": {
          "type": "string"
        },
        "refund_status": {
          "type": "integer"
        },
        "refund_status_string": {
          "type": "string"
        },
        "status_booking": {
          "type": "integer"
        },
        "updated_at": {
          "type": "string"
        },
        "user": {
          "$ref": "#/definitions/models.User"
        },
        "user_id": {
          "type": "integer"
        }
      }
    },
    "models.BookmarkPartnerResponse": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "partner_id": {
          "type": "integer"
        },
        "partner_type": {
          "type": "string"
        },
        "profile_picture": {
          "type": "string"
        },
        "province": {
          "type": "string"
        },
        "rating": {
          "type": "integer"
        },
        "rating_count": {
          "type": "integer"
        }
      }
    },
    "models.City": {
      "type": "object",
      "properties": {
        "created_at": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        }
      }
    },
    "models.EventmagzComment": {
      "type": "object",
      "properties": {
        "comment": {
          "type": "string"
        },
        "created_at": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "updated_at": {
          "type": "string"
        },
        "user": {
          "$ref": "#/definitions/models.User"
        },
        "user_id": {
          "type": "integer"
        }
      }
    },
    "models.Feed": {
      "type": "object",
      "properties": {
        "caption": {
          "type": "string"
        },
        "created_at": {
          "type": "string"
        },
        "feed_category_id": {
          "type": "integer"
        },
        "feed_type": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "is_banned": {
          "type": "integer"
        },
        "is_liked": {
          "type": "boolean"
        },
        "total_views": {
          "type": "integer"
        },
        "updated_at": {
          "type": "string"
        },
        "user": {
          "$ref": "#/definitions/models.User"
        },
        "user_id": {
          "type": "integer"
        }
      }
    },
    "models.FeedCategory": {
      "type": "object",
      "properties": {
        "category": {
          "type": "string"
        },
        "created_at": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "sorting": {
          "type": "integer"
        },
        "updated_at": {
          "type": "string"
        }
      }
    },
    "models.FeedComment": {
      "type": "object",
      "properties": {
        "comment": {
          "type": "string"
        },
        "created_at": {
          "type": "string"
        },
        "feed_id": {
          "type": "integer"
        },
        "id": {
          "type": "integer"
        },
        "updated_at": {
          "type": "string"
        },
        "user": {
          "$ref": "#/definitions/models.User"
        },
        "user_id": {
          "type": "integer"
        }
      }
    },
    "models.FeedLike": {
      "type": "object",
      "properties": {
        "created_at": {
          "type": "string"
        },
        "feed_id": {
          "type": "integer"
        },
        "id": {
          "type": "integer"
        },
        "updated_at": {
          "type": "string"
        },
        "user_id": {
          "type": "integer"
        }
      }
    },
    "models.FeedReport": {
      "type": "object",
      "properties": {
        "created_at": {
          "type": "string"
        },
        "feed_id": {
          "type": "integer"
        },
        "id": {
          "type": "integer"
        },
        "report_category_id": {
          "type": "integer"
        },
        "reporter_id": {
          "type": "integer"
        },
        "updated_at": {
          "type": "string"
        }
      }
    },
    "models.FeedReportCategory": {
      "type": "object",
      "properties": {
        "category": {
          "type": "string"
        },
        "created_at": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "updated_at": {
          "type": "string"
        }
      }
    },
    "models.HistoryPrice": {
      "type": "object",
      "properties": {
        "created_at": {
          "type": "string"
        },
        "date": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "items": {
          "type": "string"
        },
        "new_price": {
          "type": "integer"
        },
        "new_total_post": {
          "type": "integer"
        },
        "old_price": {
          "type": "integer"
        },
        "old_total_post": {
          "type": "integer"
        },
        "partner_id": {
          "type": "integer"
        },
        "status": {
          "type": "integer"
        },
        "updated_at": {
          "type": "string"
        }
      }
    },
    "models.InfluencerInfo": {
      "type": "object",
      "properties": {
        "created_at": {
          "type": "string"
        },
        "date_of_birth": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "influencer_images": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/models.TalentInfluencerImage"
          }
        },
        "marital_id": {
          "type": "integer"
        },
        "marital_status": {
          "$ref": "#/definitions/models.MaritalStatus"
        },
        "partner": {
          "$ref": "#/definitions/models.Partner"
        },
        "partner_id": {
          "type": "integer"
        },
        "religion": {
          "$ref": "#/definitions/models.Religion"
        },
        "religion_id": {
          "type": "integer"
        },
        "services": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/models.InfluencerService"
          }
        },
        "stage_name": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        }
      }
    },
    "models.InfluencerService": {
      "type": "object",
      "properties": {
        "created_at": {
          "type": "string"
        },
        "discount": {
          "type": "number"
        },
        "id": {
          "type": "integer"
        },
        "influencer_id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "post_duration": {
          "type": "integer"
        },
        "price_discount": {
          "type": "integer"
        },
        "price_rate": {
          "type": "integer"
        },
        "service_id": {
          "type": "integer"
        },
        "total_post": {
          "type": "integer"
        },
        "updated_at": {
          "type": "string"
        }
      }
    },
    "models.Magazine": {
      "type": "object",
      "properties": {
        "author": {
          "$ref": "#/definitions/models.Author"
        },
        "author_id": {
          "type": "integer"
        },
        "category_id": {
          "type": "integer"
        },
        "content": {
          "type": "string"
        },
        "created_at": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "images": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "keywords": {
          "type": "string"
        },
        "magazine_category": {
          "$ref": "#/definitions/models.MagazineCategory"
        },
        "persons": {
          "type": "string"
        },
        "slug_url": {
          "type": "string"
        },
        "source_image": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "tags": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "total_views": {
          "type": "integer"
        },
        "type_thumbnail": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        },
        "url_youtube": {
          "type": "string"
        }
      }
    },
    "models.MagazineCategory": {
      "type": "object",
      "properties": {
        "created_at": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        }
      }
    },
    "models.MagazineReport": {
      "type": "object",
      "properties": {
        "comment_id": {
          "type": "integer"
        },
        "created_at": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "report_category_id": {
          "type": "integer"
        },
        "reporter_id": {
          "type": "integer"
        },
        "updated_at": {
          "type": "string"
        }
      }
    },
    "models.MagazineReportCategory": {
      "type": "object",
      "properties": {
        "category": {
          "type": "string"
        },
        "created_at": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "updated_at": {
          "type": "string"
        }
      }
    },
    "models.MaritalStatus": {
      "type": "object",
      "properties": {
        "created_at": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        }
      }
    },
    "models.News": {
      "type": "object",
      "properties": {
        "author_image": {
          "type": "string"
        },
        "author_name": {
          "type": "string"
        },
        "content": {
          "type": "string"
        },
        "created_at": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "news_category": {
          "$ref": "#/definitions/models.NewsCategory"
        },
        "news_category_id": {
          "type": "integer"
        },
        "slug_url": {
          "type": "string"
        },
        "source": {
          "type": "string"
        },
        "tags": {
          "type": "string"
        },
        "thumbnail": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "total_views": {
          "type": "integer"
        },
        "updated_at": {
          "type": "string"
        }
      }
    },
    "models.NewsCategory": {
      "type": "object",
      "properties": {
        "category": {
          "type": "string"
        },
        "created_at": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "updated_at": {
          "type": "string"
        }
      }
    },
    "models.Notification": {
      "type": "object",
      "properties": {
        "_": {
          "type": "string"
        },
        "additional_data": {
          "type": "array",
          "items": {
            "type": "integer"
          }
        },
        "additional_data_map": {
          "type": "object",
          "additionalProperties": true
        },
        "content": {
          "type": "string"
        },
        "created_at": {
          "type": "string"
        },
        "external_user_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "from_user": {
          "$ref": "#/definitions/models.User"
        },
        "from_user_id": {
          "type": "integer"
        },
        "heading": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "notification_type": {
          "type": "string"
        },
        "read_status": {
          "type": "integer"
        },
        "segments": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "updated_at": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "user": {
          "$ref": "#/definitions/models.User"
        },
        "user_id": {
          "type": "integer"
        }
      }
    },
    "models.OTPNoAuth": {
      "type": "object",
      "properties": {
        "category": {
          "type": "string"
        },
        "code": {
          "type": "string"
        },
        "created_at": {
          "type": "string"
        },
        "expired": {
          "type": "integer"
        },
        "id": {
          "type": "integer"
        },
        "identity": {
          "type": "string"
        },
        "platform": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        }
      }
    },
    "models.Partner": {
      "type": "object",
      "properties": {
        "account_number": {
          "type": "string"
        },
        "bank": {
          "$ref": "#/definitions/models.BankAccount"
        },
        "bank_accounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/models.PartnerBankAccount"
          }
        },
        "bank_id": {
          "type": "integer"
        },
        "category_id": {
          "type": "integer"
        },
        "city": {
          "$ref": "#/definitions/models.City"
        },
        "city_id": {
          "type": "integer"
        },
        "created_at": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "gender": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "partner_category": {
          "$ref": "#/definitions/models.PartnerCategories"
        },
        "promoted": {
          "type": "integer"
        },
        "rating": {
          "type": "integer"
        },
        "rating_count": {
          "type": "integer"
        },
        "updated_at": {
          "type": "string"
        },
        "user": {
          "$ref": "#/definitions/models.User"
        },
        "user_id": {
          "type": "integer"
        }
      }
    },
    "models.PartnerBankAccount": {
      "type": "object",
      "properties": {
        "account_name": {
          "type": "string"
        },
        "account_number": {
          "type": "string"
        },
        "bank_id": {
          "type": "integer"
        },
        "bank_name": {
          "type": "string"
        },
        "created_at": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "partner_id": {
          "type": "integer"
        },
        "updated_at": {
          "type": "string"
        }
      }
    },
    "models.PartnerCalendar": {
      "type": "object",
      "properties": {
        "created_at": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "partner_id": {
          "type": "integer"
        },
        "schedule": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        }
      }
    },
    "models.PartnerCategories": {
      "type": "object",
      "properties": {
        "created_at": {
          "type": "string"
        },
        "genre_categories": {
          "type": "string"
        },
        "group_categories": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "name_categories": {
          "type": "string"
        },
        "subgenre_categories": {
          "type": "string"
        },
        "type_categories": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "models.PartnerCategoriesGrouped": {
      "type": "object",
      "properties": {
        "genre_categories": {
          "type": "string"
        },
        "group_categories": {
          "type": "string"
        },
        "name_categories": {
          "type": "string"
        },
        "subgenre_categories": {
          "type": "string"
        },
        "type_categories": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "models.PartnerReview": {
      "type": "object",
      "properties": {
        "content": {
          "type": "string"
        },
        "created_at": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "image": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "partner_id": {
          "type": "integer"
        },
        "rating": {
          "type": "integer"
        },
        "updated_at": {
          "type": "string"
        },
        "user": {
          "$ref": "#/definitions/models.User"
        },
        "user_id": {
          "type": "integer"
        },
        "username": {
          "type": "string"
        }
      }
    },
    "models.Payload": {
      "type": "object",
      "properties": {
        "bill_key": {
          "type": "string",
          "example": "456045149537"
        },
        "biller_code": {
          "type": "string",
          "example": "70012"
        },
        "currency": {
          "type": "string",
          "example": "IDR"
        },
        "fraud_status": {
          "type": "string",
          "example": "accept"
        },
        "gross_amount": {
          "type": "string",
          "example": "1.00"
        },
        "merchant_id": {
          "type": "string",
          "example": "G826347214"
        },
        "order_id": {
          "type": "string",
          "example": "1601539278455938900"
        },
        "payment_type": {
          "type": "string",
          "example": "echannel"
        },
        "settlement_time": {
          "type": "string",
          "example": "2020-10-01 15:01:32"
        },
        "signature_key": {
          "type": "string",
          "example": "af0fea0778d4e2604fdc850deb920eeb8300594c487312888bd8b45c36645cb9a9dc188c3e0ae31ad3047e8a458453383b056b9eb0fbd5a4c17aa145301c61be"
        },
        "status_code": {
          "type": "string",
          "example": "201"
        },
        "status_message": {
          "type": "string",
          "example": "midtrans payment notification"
        },
        "transaction_id": {
          "type": "string",
          "example": "cb73aee8-beae-40cf-87bc-5fefc65dae19"
        },
        "transaction_status": {
          "type": "string",
          "example": "settlement"
        },
        "transaction_time": {
          "type": "string",
          "example": "2020-10-01 15:01:32"
        },
        "va_numbers": {
          "type": "object",
          "additionalProperties": true
        }
      }
    },
    "models.Payment": {
      "type": "object",
      "properties": {
        "bank": {
          "type": "string"
        },
        "bill_key": {
          "type": "string"
        },
        "biller_code": {
          "type": "string"
        },
        "charge_response": {
          "type": "string"
        },
        "currency": {
          "type": "string"
        },
        "gross_amount": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "order_id": {
          "type": "string"
        },
        "payment_type": {
          "type": "string"
        },
        "settlement_time": {
          "type": "string"
        },
        "transaction_id": {
          "type": "string"
        },
        "transaction_status": {
          "type": "string"
        },
        "transaction_time": {
          "type": "string"
        },
        "va_number": {
          "type": "string"
        }
      }
    },
    "models.Placement": {
      "type": "object",
      "properties": {
        "desktop": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/models.Platform"
          }
        },
        "mobile": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/models.Platform"
          }
        }
      }
    },
    "models.Platform": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "image": {
          "type": "string"
        },
        "size": {
          "type": "string"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "models.Program": {
      "type": "object",
      "properties": {
        "category": {
          "type": "string"
        },
        "content": {
          "type": "string"
        },
        "created_at": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "slug_url": {
          "type": "string"
        },
        "thumbnail": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "models.Promo": {
      "type": "object",
      "properties": {
        "created_at": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "discount_fee": {
          "type": "string"
        },
        "discount_persentase": {
          "type": "string"
        },
        "end_date": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "image": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "promo_code": {
          "type": "string"
        },
        "promo_qouta": {
          "type": "string"
        },
        "promo_tipe": {
          "type": "string"
        },
        "promo_tipe_id": {
          "type": "string"
        },
        "snk": {
          "type": "string"
        },
        "start_date": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        }
      }
    },
    "models.Province": {
      "type": "object",
      "properties": {
        "created_at": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        }
      }
    },
    "models.Religion": {
      "type": "object",
      "properties": {
        "created_at": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        }
      }
    },
    "models.ServiceType": {
      "type": "object",
      "properties": {
        "created_at": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        }
      }
    },
    "models.Socmed_type": {
      "type": "object",
      "properties": {
        "created_at": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        }
      }
    },
    "models.Talent": {
      "type": "object",
      "properties": {
        "created_at": {
          "type": "string"
        },
        "date_of_birth": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "partner": {
          "$ref": "#/definitions/models.Partner"
        },
        "partner_id": {
          "type": "integer"
        },
        "price_discount": {
          "type": "integer"
        },
        "price_rate": {
          "type": "integer"
        },
        "religion": {
          "$ref": "#/definitions/models.Religion"
        },
        "religion_id": {
          "type": "integer"
        },
        "stage_name": {
          "type": "string"
        },
        "talent_riders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/models.TalentRider"
          }
        },
        "updated_at": {
          "type": "string"
        }
      }
    },
    "models.TalentInfluencerImage": {
      "type": "object",
      "properties": {
        "created_at": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "partner_id": {
          "type": "integer"
        },
        "thumbnail": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "models.TalentRider": {
      "type": "object",
      "properties": {
        "created_at": {
          "type": "string"
        },
        "details": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "talent": {
          "$ref": "#/definitions/models.Talent"
        },
        "talent_id": {
          "type": "integer"
        },
        "updated_at": {
          "type": "string"
        }
      }
    },
    "models.Ticket": {
      "type": "object",
      "properties": {
        "banner": {
          "type": "string"
        },
        "categori_ticket_id": {
          "type": "integer"
        },
        "city": {
          "$ref": "#/definitions/models.City"
        },
        "city_id": {
          "type": "integer"
        },
        "created_at": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "end_date": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "location": {
          "type": "string"
        },
        "name_event": {
          "type": "string"
        },
        "penyelenggara": {
          "type": "string"
        },
        "start_date": {
          "type": "string"
        },
        "start_time": {
          "type": "string"
        },
        "ticketcategory": {
          "$ref": "#/definitions/models.TicketCategory"
        },
        "updated_at": {
          "type": "string"
        },
        "venue_image": {
          "type": "string"
        }
      }
    },
    "models.TicketCategory": {
      "type": "object",
      "properties": {
        "category": {
          "type": "string"
        },
        "created_at": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "updated_at": {
          "type": "string"
        }
      }
    },
    "models.TicketLineup": {
      "type": "object",
      "properties": {
        "category": {
          "type": "string"
        },
        "created_at": {
          "type": "string"
        },
        "gendre": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "image": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        }
      }
    },
    "models.Tnv": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        },
        "category": {
          "type": "string"
        },
        "city_id": {
          "type": "integer"
        },
        "created_at": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "id_number": {
          "type": "string"
        },
        "instagram": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "phone_number": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        }
      }
    },
    "models.User": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        },
        "bank_accounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/models.UserBankAccount"
          }
        },
        "created_at": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "is_partner": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "phone_number": {
          "type": "string"
        },
        "player_id": {
          "type": "string"
        },
        "profile_picture": {
          "type": "string"
        },
        "status_active": {
          "type": "integer"
        },
        "updated_at": {
          "type": "string"
        },
        "username": {
          "type": "string"
        }
      }
    },
    "models.UserBankAccount": {
      "type": "object",
      "properties": {
        "account_name": {
          "type": "string"
        },
        "account_number": {
          "type": "string"
        },
        "bank_id": {
          "type": "integer"
        },
        "bank_name": {
          "type": "string"
        },
        "created_at": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "updated_at": {
          "type": "string"
        },
        "user_id": {
          "type": "integer"
        }
      }
    },
    "models.UserBlock": {
      "type": "object",
      "properties": {
        "blocked_user_id": {
          "type": "integer"
        },
        "created_at": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "updated_at": {
          "type": "string"
        },
        "user_id": {
          "type": "integer"
        }
      }
    },
    "models.UserReport": {
      "type": "object",
      "properties": {
        "created_at": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "report_category_id": {
          "type": "integer"
        },
        "reporter_id": {
          "type": "integer"
        },
        "updated_at": {
          "type": "string"
        },
        "user_id": {
          "type": "integer"
        }
      }
    },
    "models.UserReportCategory": {
      "type": "object",
      "properties": {
        "category": {
          "type": "string"
        },
        "created_at": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "updated_at": {
          "type": "string"
        }
      }
    },
    "models.Vendor": {
      "type": "object",
      "properties": {
        "close": {
          "type": "string"
        },
        "created_at": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "open": {
          "type": "string"
        },
        "partner": {
          "$ref": "#/definitions/models.Partner"
        },
        "partner_id": {
          "type": "integer"
        },
        "pic_address": {
          "type": "string"
        },
        "pic_name": {
          "type": "string"
        },
        "pic_phone_number": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        }
      }
    },
    "models.VenueInfo": {
      "type": "object",
      "properties": {
        "created_at": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/models.VenueVendorItem"
          }
        },
        "partner": {
          "$ref": "#/definitions/models.Partner"
        },
        "partner_id": {
          "type": "integer"
        },
        "pic_address": {
          "type": "string"
        },
        "pic_gender": {
          "type": "string"
        },
        "pic_name": {
          "type": "string"
        },
        "pic_phone_number": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        }
      }
    },
    "models.VenueVendorItem": {
      "type": "object",
      "properties": {
        "area_size": {
          "type": "integer"
        },
        "capacity": {
          "type": "integer"
        },
        "created_at": {
          "type": "string"
        },
        "details_items": {
          "type": "string"
        },
        "discount": {
          "type": "number"
        },
        "id": {
          "type": "integer"
        },
        "image": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/models.VenueVendorItemImage"
          }
        },
        "minimum_order": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "partner_id": {
          "type": "integer"
        },
        "price": {
          "type": "integer"
        },
        "price_discount": {
          "type": "integer"
        },
        "quota": {
          "type": "integer"
        },
        "updated_at": {
          "type": "string"
        }
      }
    },
    "models.VenueVendorItemImage": {
      "type": "object",
      "properties": {
        "created_at": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "item": {
          "$ref": "#/definitions/models.VenueVendorItem"
        },
        "item_id": {
          "type": "integer"
        },
        "thumbnail": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "models.Video": {
      "type": "object",
      "properties": {
        "category_id": {
          "type": "integer"
        },
        "created_at": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "title": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        },
        "videos_category": {
          "$ref": "#/definitions/models.VideosCategory"
        }
      }
    },
    "models.VideosCategory": {
      "type": "object",
      "properties": {
        "category": {
          "type": "string"
        },
        "created_at": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "updated_at": {
          "type": "string"
        }
      }
    },
    "models.Vod": {
      "type": "object",
      "properties": {
        "cover_image": {
          "type": "string"
        },
        "created_at": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "original_url": {
          "type": "string"
        },
        "playback_url": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        },
        "video_id": {
          "type": "string"
        }
      }
    }
  }
}